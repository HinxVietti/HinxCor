<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HinxCor.Rendering</name>
    </assembly>
    <members>
        <member name="T:HinxCor.Rendering.BitmapGenerator">
            <summary>
            BITMAP 生成工具
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="format">文本格式</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="format">文本格式</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="fontColor">字体颜色</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="fontColor">字体颜色</param>
            <param name="format">文本格式</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="format">文本格式</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">绘制区域</param>
            <param name="fontColor">字体颜色</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">绘制区域</param>
            <param name="fontColor">字体颜色</param>
            <param name="format">文本格式</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">绘制区域</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="format">文本格式</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat,System.Drawing.Text.TextRenderingHint)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">绘制区域</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="format">文本格式</param>
            <param name="renderingHint">渲染标签</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetBitmap(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制bitmap 文本
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">绘制区域</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <returns>绘制结果</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawChar(System.Drawing.Graphics@,System.Char,System.Drawing.Font,System.Drawing.Rectangle@,System.Single,System.Drawing.Brush,System.Drawing.StringFormat)">
            <summary>
            在Graphic 中绘制 字符串,此处控制 TXT spacing
            </summary>
            <param name="g"></param>
            <param name="c"></param>
            <param name="font">文本字体</param>
            <param name="rect">文本区域</param>
            <param name="charSpacing">字符间距</param>
            <param name="brush">字体笔刷</param>
            <param name="format">文本格式</param>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="text">文本内容</param>
            <param name="font">文本字体</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="fontColor">字体颜色</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Single,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="lineSpacing">行距</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Single,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="lineSpacing">行距</param>
            <param name="fontColor">字体颜色</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Single,System.Single,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font,System.Single,System.Single,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="font">文本字体</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="font">文本字体</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">文本区域</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="format">文本格式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Text.TextRenderingHint)">
            <summary>
            绘制bitmap文本;
            </summary>
            <param name="str">需要绘制的文本</param>
            <param name="font">字体</param>
            <param name="rect">绘制矩形框</param>
            <param name="renderingHint">绘制筛选</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.Drawing.Bitmap,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Text.TextRenderingHint)">
            <summary>
            
            </summary>
            <param name="bmp">需要绘制的Bitmap</param>
            <param name="str">需要绘制的文本</param>
            <param name="font">字体</param>
            <param name="rect">绘制矩形框</param>
            <param name="renderingHint">绘制筛选</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.Drawing.Bitmap,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat,System.Drawing.Text.TextRenderingHint)">
            <summary>
            
            </summary>
            <param name="bmp">需要绘制的Bitmap</param>
            <param name="str">需要绘制的文本</param>
            <param name="font">字体</param>
            <param name="rect">绘制矩形框</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景颜色</param>
            <param name="format">格式</param>
            <param name="renderingHint">绘制筛选</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.StringFormat,System.Drawing.Text.TextRenderingHint)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">文本区域</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="format">文本格式</param>
            <param name="renderingHint">渲染格式标签</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawString(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Text.TextRenderingHint)">
            <summary>
            绘制bitmap文本;可以使用行距
            </summary>
            <param name="str">文本内容</param>
            <param name="font">文本字体</param>
            <param name="rect">文本区域</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="fontColor">字体颜色</param>
            <param name="backColor">背景色</param>
            <param name="renderingHint">渲染格式标签</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.SplitAsLine(System.String)">
            <summary>
            不同情况下切割成多行文本
            </summary>
            <param name="str">原文本</param>
            <returns>行文本数组</returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawText(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Single,System.Single,System.Drawing.Brush,System.Drawing.Color,System.Drawing.Text.TextRenderingHint)">
            <summary>
            
            </summary>
            <param name="str">需要绘制的文本</param>
            <param name="font">字体</param>
            <param name="rect">绘制矩形框</param>
            <param name="format">格式</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="brush"></param>
            <param name="backColor">背景颜色</param>
            <param name="renderingHint">绘制筛选</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.GetSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Single)">
            <summary>
            获取大小
            </summary>
            <param name="g">用来衡量字符的图形</param>
            <param name="str">字符</param>
            <param name="font">字体</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawText(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Single,System.Single,System.Drawing.Brush,System.Drawing.Color,System.Drawing.Text.TextRenderingHint)">
            <summary>
            绘制文本
            </summary>
            <param name="str">需要绘制的文本</param>
            <param name="font">字体</param>
            <param name="size">大小</param>
            <param name="format">格式</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="brush"></param>
            <param name="backColor">背景颜色</param>
            <param name="renderingHint">绘制筛选</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.ClearBack(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            清空背景
            </summary>
            <param name="bmp">需要绘制的Bitmap</param>
            <param name="backColor">背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawText(System.Drawing.Bitmap,System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Single,System.Single,System.Drawing.Brush,System.Drawing.Text.TextRenderingHint)">
            <summary>
            绘制文本
            </summary>
            <param name="bmp">需要绘制的Bitmap</param>
            <param name="str">需要绘制的文本</param>
            <param name="font">字体</param>
            <param name="size">大小</param>
            <param name="format">格式</param>
            <param name="lineSpacing">行距</param>
            <param name="charSpacing">字间距</param>
            <param name="brush"></param>
            <param name="renderingHint">绘制筛选</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawLine(System.Drawing.Graphics@,System.Drawing.Font,System.Drawing.Brush,System.String,System.Drawing.PointF,System.Single)">
            <summary>
            在graphic上绘制一行,可以charSpacing拓展
            </summary>
            <param name="g"></param>
            <param name="f"></param>
            <param name="brush"></param>
            <param name="text"></param>
            <param name="point"></param>
            <param name="charSpacing">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.BitmapGenerator.DrawChar(System.Drawing.Graphics@,System.String,System.Drawing.PointF,System.Drawing.Brush,System.Drawing.Font)">
            <summary>
            在graphic上绘制字符
            </summary>
            <param name="g"></param>
            <param name="c"></param>
            <param name="p"></param>
            <param name="b"></param>
            <param name="f"></param>
        </member>
        <member name="T:HinxCor.Rendering.FontFactory">
            <summary>
            字体工厂
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.#ctor">
            <summary>
            ~构造
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.FontFactory.UserFontCollection">
            <summary>
            用户字体集合
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.FontFactory.LocalFontMap">
            <summary>
            用户字体表
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.FontFactory.SystemFontMap">
            <summary>
            系统字体表
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GeneratePrivateFontCollection(System.String)">
            <summary>
            刷新本地字体列表
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            <summary>
            获取字体
            </summary>
            <param name="familyName">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <param name="unit">绘制样式</param>
            <param name="gdiCharSet">gdi char set</param>
            <param name="gdiVerticalFont">是否垂直排版</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            <summary>
            获取字体
            </summary>
            <param name="family">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <param name="unit">绘制样式</param>
            <param name="gdiCharSet">gdi char set</param>
            <param name="gdiVerticalFont">是否垂直排版</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
            <summary>
            获取字体
            </summary>
            <param name="family">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <param name="unit">绘制样式</param>
            <param name="gdiCharSet">gdi char set</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
            <summary>
            获取字体
            </summary>
            <param name="familyName">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <param name="unit">绘制样式</param>
            <param name="gdiCharSet">gdi char set</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            获取字体
            </summary>
            <param name="family">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <param name="unit">绘制样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
            <summary>
            获取字体
            </summary> 
            <param name="family">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
            获取字体
            </summary>
            <param name="family">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="unit">绘制样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            获取字体
            </summary>
            <param name="familyName">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.String,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
            获取字体
            </summary>
            <param name="familyName">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="unit">绘制样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.FontFamily,System.Single)">
            <summary>
            获取字体
            </summary>
            <param name="family">字体名称</param>
            <param name="emSize">字体大小</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.Drawing.Font,System.Drawing.FontStyle)">
            <summary>
            获取字体
            </summary>
            <param name="prototype">原有字体</param>
            <param name="newStyle">新样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.String,System.Int32)">
            <summary>
            获取字体
            </summary>
            <param name="fontName">字体名称</param>
            <param name="fontSize">字体大小</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFont(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            获取字体
            </summary>
            <param name="familyName">字体名称</param>
            <param name="emSize">字体大小</param>
            <param name="style">字体样式</param>
            <param name="unit">绘制样式</param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.GetFontDialogResult(System.Object@,System.Boolean)">
            <summary>
            获取字体文件
            </summary>
            <param name="arg"></param>
            <param name="multipleSelect"></param>
            <returns></returns>
        </member>
        <member name="M:HinxCor.Rendering.FontFactory.ImportFont(System.Boolean)">
            <summary>
            导入字体
            </summary>
            <param name="multipleSelect"></param>
            <returns></returns>
        </member>
        <member name="T:HinxCor.Rendering.GDI.ScreenPainter">
            <summary>
            
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.GDI.ScreenPainter.PenAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.GDI.ScreenPainter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.GDI.ScreenPainter.EndDrawSomething">
            <summary>
            绘制终止
            </summary>
        </member>
        <member name="F:HinxCor.Rendering.GDI.ScreenPainter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.GDI.ScreenPainter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:HinxCor.Rendering.GDI.ScreenPainter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:HinxCor.Rendering.Text.TextAlignment">
            <summary>
            文本对其方式
            </summary>
        </member>
        <member name="F:HinxCor.Rendering.Text.TextAlignment.Left">
            <summary>
            居左对其
            </summary>
        </member>
        <member name="F:HinxCor.Rendering.Text.TextAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="F:HinxCor.Rendering.Text.TextAlignment.Right">
            <summary>
            居右对其
            </summary>
        </member>
        <member name="T:HinxCor.Rendering.Text.TextObject">
            <summary>
            文本对象;如需使用请手动设置 Rect,renderingHint.
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.text">
            <summary>
            对象的文本内容
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.fontColor">
            <summary>
            文本的颜色
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.bgColor">
            <summary>
            为本背景色
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.FontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.fontName">
            <summary>
            字体名称
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.format">
            <summary>
            文本格式
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.FontStyle">
            <summary>
            字体样式
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.LineSpacing">
            <summary>
            行间距
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.CharSpacing">
            <summary>
            字间距
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.Rect">
            <summary>
            绘制矩阵(区域)
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.font">
            <summary>
            文本的字体
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.graphics">
            <summary>
            虚拟的Graphic
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.Size">
            <summary>
            文字BMP的size
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.wordSpacing">
            <summary>
            空格的间距
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.renderingHint">
            <summary>
            绘制提示
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.VerticalFont">
            <summary>
            垂直的字体;默认false
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.Brush">
            <summary>
            字体笔刷
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.BMP">
            <summary>
            绘制文本BMP
            </summary>
        </member>
        <member name="P:HinxCor.Rendering.Text.TextObject.Drawer">
            <summary>
            绘制BMP的方法,默认使用内置,可以自定义
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Drawing.Color,System.Single,System.String,System.Drawing.StringAlignment,System.Drawing.FontStyle,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fcolor">文本颜色</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="align">字体对其方式</param>
            <param name="style">字体样式</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Drawing.Color,System.Single,System.String,System.Drawing.StringAlignment,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fcolor">文本颜色</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="align">字体对其方式</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Drawing.Color,System.Single,System.String,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fcolor">文本颜色</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Single,System.String,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Single,System.String)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.Single,System.String)">
            <summary>
            构造
            </summary> 
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.Drawing.Color,System.Single,System.String,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="fcolor">文本颜色</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Single,System.String,System.Drawing.StringAlignment,System.Drawing.FontStyle,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fcolor">文本颜色</param>
            <param name="bgcolor">背景色</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="align">字体对其方式</param>
            <param name="style">字体样式</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Single,System.String,System.Drawing.StringFormat,System.Drawing.FontStyle,System.Single,System.Single)">
            <summary>
            构造
            </summary>
            <param name="text">文本</param>
            <param name="fcolor">文本颜色</param>
            <param name="bgcolor">背景色</param>
            <param name="fontsize">字号</param>
            <param name="fontname">字体名</param>
            <param name="format">文本格式</param>
            <param name="style">字体样式</param>
            <param name="linesp">行距</param>
            <param name="charsp">字间距</param>
        </member>
        <member name="M:HinxCor.Rendering.Text.TextObject.SetFont(System.Drawing.Font)">
            <summary>
            设置字体属性;
            FName;
            FSize;
            FStyle
            </summary>
            <param name="font"></param>
        </member>
        <member name="T:GDIPlus.FastBitmap">
             <summary>
            高速bitmap
             </summary>
        </member>
        <member name="M:GDIPlus.FastBitmap.#ctor(System.Drawing.Bitmap)">
            <summary>
            构造
            </summary>
            <param name="bitmap"></param>
        </member>
        <member name="M:GDIPlus.FastBitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            构造
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
        </member>
        <member name="M:GDIPlus.FastBitmap.Clone">
            <summary>
            克隆FastBitmap
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDIPlus.FastBitmap.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:GDIPlus.FastBitmap.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GDIPlus.FastBitmap.Finalize">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:GDIPlus.FastBitmap.GetIntensity(System.Int32,System.Int32)">
            <summary>
            获取强调
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:GDIPlus.FastBitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            获取像素
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:GDIPlus.FastBitmap.Lock">
            <summary>
            锁定内存(只有锁定到系统内存数据之后才能操作)
            </summary>
        </member>
        <member name="M:GDIPlus.FastBitmap.Save(System.String)">
            <summary>
            保存到本地文件
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:GDIPlus.FastBitmap.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            保存到本地文件
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
        </member>
        <member name="M:GDIPlus.FastBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            设置内存区域的颜色
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="c"></param>
        </member>
        <member name="M:GDIPlus.FastBitmap.Unlock">
            <summary>
            接触锁定,释放BMPData
            </summary>
        </member>
        <member name="P:GDIPlus.FastBitmap.Bitmap">
            <summary>
            bmp get and set.
            </summary>
        </member>
        <member name="P:GDIPlus.FastBitmap.Height">
            <summary>
            get height
            </summary>
        </member>
        <member name="P:GDIPlus.FastBitmap.Width">
            <summary>
            get width
            </summary>
        </member>
        <member name="T:DefaultGdiPens">
            <summary>
            画笔集合
            </summary>
        </member>
        <member name="T:DefaultGdiColors">
            <summary>
            默认画笔颜色
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Red">
            <summary>
            红
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Orange">
            <summary>
            橙
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Yellow">
            <summary>
            黄
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Green">
            <summary>
            绿
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Blue">
            <summary>
            蓝
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Indigo">
            <summary>
            殿
            </summary>
        </member>
        <member name="P:DefaultGdiColors.Purple">
            <summary>
            紫
            </summary>
        </member>
        <member name="T:IPainterCmd">
            <summary>
            
            </summary>
        </member>
        <member name="P:IPainterCmd.CouldHandle">
            <summary>
            是否满足绘制条件
            </summary>
        </member>
        <member name="P:IPainterCmd.Type">
            <summary>
            绘制对象的类型
            </summary>
        </member>
        <member name="P:IPainterCmd.Pen">
            <summary>
            绘制的画笔
            </summary>
        </member>
        <member name="P:IPainterCmd.ColorAlpha">
            <summary>
            画笔的透明度
            </summary>
        </member>
        <member name="T:Painter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Painter.Draw(System.Drawing.Graphics,IPainterCmd)">
            <summary>
            
            </summary>
            <param name="graphics"></param>
            <param name="cmd"></param>
        </member>
        <member name="M:Painter.DrawLine(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            偏移绘制线段
            </summary>
            <param name="graphics"></param>
            <param name="pen"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Painter.Multiple(System.Drawing.SizeF,System.Single)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Painter.Multiple(System.Drawing.PointF,System.Single)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:PainterCmd`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:PaintType">
            <summary>
            绘制对象的类型
            </summary>
        </member>
        <member name="F:PaintType.Rectangle">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:PaintType.Ellipse">
            <summary>
            椭圆
            </summary>
        </member>
        <member name="F:PaintType.Arrow">
            <summary>
            箭头
            </summary>
        </member>
        <member name="F:PaintType.StraightLine">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:PaintType.Dashed">
            <summary>
            虚线
            </summary>
        </member>
        <member name="F:PaintType.Lines">
            <summary>
            多线段
            </summary>
        </member>
        <member name="T:PCmdData_2p">
            <summary>
            所有两个点的绘制对象的类型
            </summary>
        </member>
        <member name="M:PCmdData_2p.#ctor(PaintType,System.Drawing.PointF)">
            <summary>
            construct
            </summary>
            <param name="type"></param>
            <param name="startp"></param>
        </member>
        <member name="P:PCmdData_2p.Start">
            <summary>
            起点
            </summary>
        </member>
        <member name="P:PCmdData_2p.End">
            <summary>
            终点
            </summary>
        </member>
        <member name="P:PCmdData_2p.CouldHandle">
            <summary>
            是否可以绘制
            </summary>
        </member>
        <member name="P:PCmdData_2p.Type">
            <summary>
            绘制对象的类型
            </summary>
        </member>
        <member name="P:PCmdData_2p.Pen">
            <summary>
            绘制的画笔
            </summary>
        </member>
        <member name="P:PCmdData_2p.ColorAlpha">
            <summary>
            绘制的颜色
            </summary>
        </member>
        <member name="T:PCmdData_Arrow">
            <summary>
            绘制arrow的命令
            </summary>
        </member>
        <member name="P:PCmdData_Arrow.ColorAlpha">
            <summary>
            get set pen alpha
            </summary>
        </member>
        <member name="P:PCmdData_Arrow.Type">
            <summary>
            返回arrow
            </summary>
        </member>
        <member name="P:PCmdData_Arrow.Pen">
            <summary>
            画笔
            </summary>
        </member>
        <member name="P:PCmdData_Arrow.Start">
            <summary>
            起始点
            </summary>
        </member>
        <member name="P:PCmdData_Arrow.End">
            <summary>
            终止点
            </summary>
        </member>
        <member name="P:PCmdData_Arrow.CouldHandle">
            <summary>
            是否满足绘制条件
            </summary>
        </member>
        <member name="M:PCmdData_Arrow.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            construct
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:PCmdData_Arrow.GetDrawData">
            <summary>
            获取绘制箭头的数组 [弃用]
            </summary>
            <returns></returns>
        </member>
        <member name="T:PCmdData_Dashed">
            <summary>
            虚线
            </summary>
        </member>
        <member name="P:PCmdData_Dashed.ColorAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="M:PCmdData_Dashed.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="pen"></param>
        </member>
        <member name="P:PCmdData_Dashed.Start">
            <summary>
            起点
            </summary>
        </member>
        <member name="P:PCmdData_Dashed.End">
            <summary>
            终点
            </summary>
        </member>
        <member name="P:PCmdData_Dashed.Pen">
            <summary>
            画笔
            </summary>
        </member>
        <member name="P:PCmdData_Dashed.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:PCmdData_Dashed.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:PCmdData_Dashed.CouldHandle">
            <summary>
            
            </summary>
        </member>
        <member name="T:PCmdData_Lines">
            <summary>
            绘制线条的数据
            </summary>
        </member>
        <member name="P:PCmdData_Lines.ColorAlpha">
            <summary>
            画笔透明度
            </summary>
        </member>
        <member name="P:PCmdData_Lines.Type">
            <summary>
            返回Lines
            </summary>
        </member>
        <member name="P:PCmdData_Lines.Pen">
            <summary>
            画笔
            </summary>
        </member>
        <member name="P:PCmdData_Lines.Pens">
            <summary>
            多段画笔
            </summary>
        </member>
        <member name="P:PCmdData_Lines.Points">
            <summary>
            线段
            </summary>
        </member>
        <member name="P:PCmdData_Lines.CouldHandle">
            <summary>
            是否满足绘制条件
            </summary>
        </member>
        <member name="M:PCmdData_Lines.#ctor">
            <summary>
            construct
            </summary>
        </member>
        <member name="M:PCmdData_Lines.add(System.Drawing.PointF)">
            <summary>
            添加线段上的点
            </summary>
            <param name="p"></param>
        </member>
        <member name="T:ScreenPainter_NOGUI">
            <summary>
            没有GUI的屏幕绘制工具
            </summary>
        </member>
        <member name="M:ScreenPainter_NOGUI.GetMainContent">
            <summary>
            获取主画面
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScreenPainter_NOGUI.GetGlyph">
            <summary>
            获取当前笔画
            </summary>
            <returns></returns>
        </member>
        <member name="P:ScreenPainter_NOGUI.Undoable">
            <summary>
            是否可以Undo
            </summary>
        </member>
        <member name="M:ScreenPainter_NOGUI.#ctor(System.Int32,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="wid"></param>
            <param name="hei"></param>
        </member>
        <member name="M:ScreenPainter_NOGUI.DrawGlyph">
            <summary>
            绘制笔画到主题内容
            </summary>
        </member>
        <member name="M:ScreenPainter_NOGUI.Undo">
            <summary>
            返回上一次编辑状态
            </summary>
        </member>
        <member name="M:ScreenPainter_NOGUI.Handle(IPainterCmd,System.Boolean)">
            <summary>
            绘制内容到笔画
            </summary>
            <param name="Cmd"></param>
            <param name="isDown"></param>
        </member>
    </members>
</doc>
