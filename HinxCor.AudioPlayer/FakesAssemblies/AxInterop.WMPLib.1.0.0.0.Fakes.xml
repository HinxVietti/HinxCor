<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AxInterop.WMPLib.1.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer">
            <summary>AxWMPLib.AxWindowsMediaPlayer 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.#ctor(AxWMPLib.AxWindowsMediaPlayer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.AttachInterfaces">
            <summary>设置 AxWindowsMediaPlayer.AttachInterfaces() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.AudioLanguageChangeAdd_WMPOCXEvents_AudioLanguageChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_AudioLanguageChange(_WMPOCXEvents_AudioLanguageChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.AudioLanguageChangeRemove_WMPOCXEvents_AudioLanguageChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_AudioLanguageChange(_WMPOCXEvents_AudioLanguageChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.BufferingAdd_WMPOCXEvents_BufferingEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_Buffering(_WMPOCXEvents_BufferingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.BufferingRemove_WMPOCXEvents_BufferingEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_Buffering(_WMPOCXEvents_BufferingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromBurnErrorAdd_WMPOCXEvents_CdromBurnErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromBurnError(_WMPOCXEvents_CdromBurnErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromBurnErrorRemove_WMPOCXEvents_CdromBurnErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromBurnError(_WMPOCXEvents_CdromBurnErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromBurnMediaErrorAdd_WMPOCXEvents_CdromBurnMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromBurnMediaError(_WMPOCXEvents_CdromBurnMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromBurnMediaErrorRemove_WMPOCXEvents_CdromBurnMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromBurnMediaError(_WMPOCXEvents_CdromBurnMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromBurnStateChangeAdd_WMPOCXEvents_CdromBurnStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromBurnStateChange(_WMPOCXEvents_CdromBurnStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromBurnStateChangeRemove_WMPOCXEvents_CdromBurnStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromBurnStateChange(_WMPOCXEvents_CdromBurnStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromMediaChangeAdd_WMPOCXEvents_CdromMediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromMediaChange(_WMPOCXEvents_CdromMediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromMediaChangeRemove_WMPOCXEvents_CdromMediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromMediaChange(_WMPOCXEvents_CdromMediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromRipMediaErrorAdd_WMPOCXEvents_CdromRipMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromRipMediaError(_WMPOCXEvents_CdromRipMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromRipMediaErrorRemove_WMPOCXEvents_CdromRipMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromRipMediaError(_WMPOCXEvents_CdromRipMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromRipStateChangeAdd_WMPOCXEvents_CdromRipStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromRipStateChange(_WMPOCXEvents_CdromRipStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CdromRipStateChangeRemove_WMPOCXEvents_CdromRipStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromRipStateChange(_WMPOCXEvents_CdromRipStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ClickEventAdd_WMPOCXEvents_ClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ClickEvent(_WMPOCXEvents_ClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ClickEventRemove_WMPOCXEvents_ClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ClickEvent(_WMPOCXEvents_ClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CreatePartnershipCompleteAdd_WMPOCXEvents_CreatePartnershipCompleteEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CreatePartnershipComplete(_WMPOCXEvents_CreatePartnershipCompleteEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CreatePartnershipCompleteRemove_WMPOCXEvents_CreatePartnershipCompleteEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CreatePartnershipComplete(_WMPOCXEvents_CreatePartnershipCompleteEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CreateSink">
            <summary>设置 AxWindowsMediaPlayer.CreateSink() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CtlcontrolsGet">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlcontrols() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CtlenabledGet">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlenabled() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CtlenabledSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_Ctlenabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentItemChangeAdd_WMPOCXEvents_CurrentItemChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentItemChange(_WMPOCXEvents_CurrentItemChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentItemChangeRemove_WMPOCXEvents_CurrentItemChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentItemChange(_WMPOCXEvents_CurrentItemChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentMediaItemAvailableAdd_WMPOCXEvents_CurrentMediaItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentMediaItemAvailable(_WMPOCXEvents_CurrentMediaItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentMediaItemAvailableRemove_WMPOCXEvents_CurrentMediaItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentMediaItemAvailable(_WMPOCXEvents_CurrentMediaItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentPlaylistChangeAdd_WMPOCXEvents_CurrentPlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentPlaylistChange(_WMPOCXEvents_CurrentPlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentPlaylistChangeRemove_WMPOCXEvents_CurrentPlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentPlaylistChange(_WMPOCXEvents_CurrentPlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentPlaylistItemAvailableAdd_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentPlaylistItemAvailable(_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.CurrentPlaylistItemAvailableRemove_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentPlaylistItemAvailable(_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DetachSink">
            <summary>设置 AxWindowsMediaPlayer.DetachSink() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceConnectAdd_WMPOCXEvents_DeviceConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceConnect(_WMPOCXEvents_DeviceConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceConnectRemove_WMPOCXEvents_DeviceConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceConnect(_WMPOCXEvents_DeviceConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceDisconnectAdd_WMPOCXEvents_DeviceDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceDisconnect(_WMPOCXEvents_DeviceDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceDisconnectRemove_WMPOCXEvents_DeviceDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceDisconnect(_WMPOCXEvents_DeviceDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceStatusChangeAdd_WMPOCXEvents_DeviceStatusChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceStatusChange(_WMPOCXEvents_DeviceStatusChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceStatusChangeRemove_WMPOCXEvents_DeviceStatusChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceStatusChange(_WMPOCXEvents_DeviceStatusChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceSyncErrorAdd_WMPOCXEvents_DeviceSyncErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceSyncError(_WMPOCXEvents_DeviceSyncErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceSyncErrorRemove_WMPOCXEvents_DeviceSyncErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceSyncError(_WMPOCXEvents_DeviceSyncErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceSyncStateChangeAdd_WMPOCXEvents_DeviceSyncStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceSyncStateChange(_WMPOCXEvents_DeviceSyncStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DeviceSyncStateChangeRemove_WMPOCXEvents_DeviceSyncStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceSyncStateChange(_WMPOCXEvents_DeviceSyncStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DisconnectAdd_WMPOCXEvents_DisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_Disconnect(_WMPOCXEvents_DisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DisconnectRemove_WMPOCXEvents_DisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_Disconnect(_WMPOCXEvents_DisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DomainChangeAdd_WMPOCXEvents_DomainChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DomainChange(_WMPOCXEvents_DomainChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DomainChangeRemove_WMPOCXEvents_DomainChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DomainChange(_WMPOCXEvents_DomainChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DoubleClickEventAdd_WMPOCXEvents_DoubleClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DoubleClickEvent(_WMPOCXEvents_DoubleClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DoubleClickEventRemove_WMPOCXEvents_DoubleClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DoubleClickEvent(_WMPOCXEvents_DoubleClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DurationUnitChangeAdd_WMPOCXEvents_DurationUnitChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DurationUnitChange(_WMPOCXEvents_DurationUnitChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.DurationUnitChangeRemove_WMPOCXEvents_DurationUnitChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DurationUnitChange(_WMPOCXEvents_DurationUnitChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.EndOfStreamAdd_WMPOCXEvents_EndOfStreamEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_EndOfStream(_WMPOCXEvents_EndOfStreamEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.EndOfStreamRemove_WMPOCXEvents_EndOfStreamEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_EndOfStream(_WMPOCXEvents_EndOfStreamEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ErrorEventAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ErrorEvent(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ErrorEventRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ErrorEvent(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ErrorGet">
            <summary>设置 AxWindowsMediaPlayer.get_Error() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.FolderScanStateChangeAdd_WMPOCXEvents_FolderScanStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_FolderScanStateChange(_WMPOCXEvents_FolderScanStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.FolderScanStateChangeRemove_WMPOCXEvents_FolderScanStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_FolderScanStateChange(_WMPOCXEvents_FolderScanStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.KeyDownEventAdd_WMPOCXEvents_KeyDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_KeyDownEvent(_WMPOCXEvents_KeyDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.KeyDownEventRemove_WMPOCXEvents_KeyDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_KeyDownEvent(_WMPOCXEvents_KeyDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.KeyPressEventAdd_WMPOCXEvents_KeyPressEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_KeyPressEvent(_WMPOCXEvents_KeyPressEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.KeyPressEventRemove_WMPOCXEvents_KeyPressEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_KeyPressEvent(_WMPOCXEvents_KeyPressEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.KeyUpEventAdd_WMPOCXEvents_KeyUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_KeyUpEvent(_WMPOCXEvents_KeyUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.KeyUpEventRemove_WMPOCXEvents_KeyUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_KeyUpEvent(_WMPOCXEvents_KeyUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.LibraryConnectAdd_WMPOCXEvents_LibraryConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_LibraryConnect(_WMPOCXEvents_LibraryConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.LibraryConnectRemove_WMPOCXEvents_LibraryConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_LibraryConnect(_WMPOCXEvents_LibraryConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.LibraryDisconnectAdd_WMPOCXEvents_LibraryDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_LibraryDisconnect(_WMPOCXEvents_LibraryDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.LibraryDisconnectRemove_WMPOCXEvents_LibraryDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_LibraryDisconnect(_WMPOCXEvents_LibraryDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MarkerHitAdd_WMPOCXEvents_MarkerHitEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MarkerHit(_WMPOCXEvents_MarkerHitEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MarkerHitRemove_WMPOCXEvents_MarkerHitEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MarkerHit(_WMPOCXEvents_MarkerHitEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaChangeAdd_WMPOCXEvents_MediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaChange(_WMPOCXEvents_MediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaChangeRemove_WMPOCXEvents_MediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaChange(_WMPOCXEvents_MediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionAttributeStringAddedAdd_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionAttributeStringAdded(_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionAttributeStringAddedRemove_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionAttributeStringAdded(_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionAttributeStringChangedAdd_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionAttributeStringChanged(_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionAttributeStringChangedRemove_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionAttributeStringChanged(_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionAttributeStringRemovedAdd_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionAttributeStringRemoved(_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionAttributeStringRemovedRemove_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionAttributeStringRemoved(_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionMediaAddedAdd_WMPOCXEvents_MediaCollectionMediaAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionMediaAdded(_WMPOCXEvents_MediaCollectionMediaAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionMediaAddedRemove_WMPOCXEvents_MediaCollectionMediaAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionMediaAdded(_WMPOCXEvents_MediaCollectionMediaAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionMediaRemovedAdd_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionMediaRemoved(_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaCollectionMediaRemovedRemove_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionMediaRemoved(_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaErrorAdd_WMPOCXEvents_MediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaError(_WMPOCXEvents_MediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MediaErrorRemove_WMPOCXEvents_MediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaError(_WMPOCXEvents_MediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ModeChangeAdd_WMPOCXEvents_ModeChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ModeChange(_WMPOCXEvents_ModeChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ModeChangeRemove_WMPOCXEvents_ModeChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ModeChange(_WMPOCXEvents_ModeChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MouseDownEventAdd_WMPOCXEvents_MouseDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MouseDownEvent(_WMPOCXEvents_MouseDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MouseDownEventRemove_WMPOCXEvents_MouseDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MouseDownEvent(_WMPOCXEvents_MouseDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MouseMoveEventAdd_WMPOCXEvents_MouseMoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MouseMoveEvent(_WMPOCXEvents_MouseMoveEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MouseMoveEventRemove_WMPOCXEvents_MouseMoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MouseMoveEvent(_WMPOCXEvents_MouseMoveEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MouseUpEventAdd_WMPOCXEvents_MouseUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MouseUpEvent(_WMPOCXEvents_MouseUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.MouseUpEventRemove_WMPOCXEvents_MouseUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MouseUpEvent(_WMPOCXEvents_MouseUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.NewStreamAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_NewStream(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.NewStreamRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_NewStream(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.OpenPlaylistSwitchAdd_WMPOCXEvents_OpenPlaylistSwitchEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_OpenPlaylistSwitch(_WMPOCXEvents_OpenPlaylistSwitchEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.OpenPlaylistSwitchRemove_WMPOCXEvents_OpenPlaylistSwitchEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_OpenPlaylistSwitch(_WMPOCXEvents_OpenPlaylistSwitchEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.OpenStateChangeAdd_WMPOCXEvents_OpenStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_OpenStateChange(_WMPOCXEvents_OpenStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.OpenStateChangeRemove_WMPOCXEvents_OpenStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_OpenStateChange(_WMPOCXEvents_OpenStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlayStateChangeAdd_WMPOCXEvents_PlayStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlayStateChange(_WMPOCXEvents_PlayStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlayStateChangeRemove_WMPOCXEvents_PlayStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlayStateChange(_WMPOCXEvents_PlayStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlayerDockedStateChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlayerDockedStateChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlayerDockedStateChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlayerDockedStateChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlayerReconnectAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlayerReconnect(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlayerReconnectRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlayerReconnect(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistChangeAdd_WMPOCXEvents_PlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistChange(_WMPOCXEvents_PlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistChangeRemove_WMPOCXEvents_PlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistChange(_WMPOCXEvents_PlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionPlaylistAddedAdd_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionPlaylistAdded(_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionPlaylistAddedRemove_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionPlaylistAdded(_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionPlaylistRemovedAdd_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionPlaylistRemoved(_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionPlaylistRemovedRemove_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionPlaylistRemoved(_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionPlaylistSetAsDeletedAdd_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionPlaylistSetAsDeleted(_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PlaylistCollectionPlaylistSetAsDeletedRemove_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionPlaylistSetAsDeleted(_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PositionChangeAdd_WMPOCXEvents_PositionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PositionChange(_WMPOCXEvents_PositionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.PositionChangeRemove_WMPOCXEvents_PositionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PositionChange(_WMPOCXEvents_PositionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnAudioLanguageChangeObject_WMPOCXEvents_AudioLanguageChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnAudioLanguageChange(Object sender, _WMPOCXEvents_AudioLanguageChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnBufferingObject_WMPOCXEvents_BufferingEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnBuffering(Object sender, _WMPOCXEvents_BufferingEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCdromBurnErrorObject_WMPOCXEvents_CdromBurnErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromBurnError(Object sender, _WMPOCXEvents_CdromBurnErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCdromBurnMediaErrorObject_WMPOCXEvents_CdromBurnMediaErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromBurnMediaError(Object sender, _WMPOCXEvents_CdromBurnMediaErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCdromBurnStateChangeObject_WMPOCXEvents_CdromBurnStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromBurnStateChange(Object sender, _WMPOCXEvents_CdromBurnStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCdromMediaChangeObject_WMPOCXEvents_CdromMediaChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromMediaChange(Object sender, _WMPOCXEvents_CdromMediaChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCdromRipMediaErrorObject_WMPOCXEvents_CdromRipMediaErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromRipMediaError(Object sender, _WMPOCXEvents_CdromRipMediaErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCdromRipStateChangeObject_WMPOCXEvents_CdromRipStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromRipStateChange(Object sender, _WMPOCXEvents_CdromRipStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnClickEventObject_WMPOCXEvents_ClickEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnClickEvent(Object sender, _WMPOCXEvents_ClickEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCreatePartnershipCompleteObject_WMPOCXEvents_CreatePartnershipCompleteEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCreatePartnershipComplete(Object sender, _WMPOCXEvents_CreatePartnershipCompleteEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCurrentItemChangeObject_WMPOCXEvents_CurrentItemChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentItemChange(Object sender, _WMPOCXEvents_CurrentItemChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCurrentMediaItemAvailableObject_WMPOCXEvents_CurrentMediaItemAvailableEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentMediaItemAvailable(Object sender, _WMPOCXEvents_CurrentMediaItemAvailableEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCurrentPlaylistChangeObject_WMPOCXEvents_CurrentPlaylistChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentPlaylistChange(Object sender, _WMPOCXEvents_CurrentPlaylistChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnCurrentPlaylistItemAvailableObject_WMPOCXEvents_CurrentPlaylistItemAvailableEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentPlaylistItemAvailable(Object sender, _WMPOCXEvents_CurrentPlaylistItemAvailableEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDeviceConnectObject_WMPOCXEvents_DeviceConnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceConnect(Object sender, _WMPOCXEvents_DeviceConnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDeviceDisconnectObject_WMPOCXEvents_DeviceDisconnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceDisconnect(Object sender, _WMPOCXEvents_DeviceDisconnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDeviceStatusChangeObject_WMPOCXEvents_DeviceStatusChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceStatusChange(Object sender, _WMPOCXEvents_DeviceStatusChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDeviceSyncErrorObject_WMPOCXEvents_DeviceSyncErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceSyncError(Object sender, _WMPOCXEvents_DeviceSyncErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDeviceSyncStateChangeObject_WMPOCXEvents_DeviceSyncStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceSyncStateChange(Object sender, _WMPOCXEvents_DeviceSyncStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDisconnectObject_WMPOCXEvents_DisconnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDisconnect(Object sender, _WMPOCXEvents_DisconnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDomainChangeObject_WMPOCXEvents_DomainChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDomainChange(Object sender, _WMPOCXEvents_DomainChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDoubleClickEventObject_WMPOCXEvents_DoubleClickEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDoubleClickEvent(Object sender, _WMPOCXEvents_DoubleClickEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnDurationUnitChangeObject_WMPOCXEvents_DurationUnitChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDurationUnitChange(Object sender, _WMPOCXEvents_DurationUnitChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnEndOfStreamObject_WMPOCXEvents_EndOfStreamEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnEndOfStream(Object sender, _WMPOCXEvents_EndOfStreamEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnErrorEventObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnErrorEvent(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnFolderScanStateChangeObject_WMPOCXEvents_FolderScanStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnFolderScanStateChange(Object sender, _WMPOCXEvents_FolderScanStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnKeyDownEventObject_WMPOCXEvents_KeyDownEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnKeyDownEvent(Object sender, _WMPOCXEvents_KeyDownEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnKeyPressEventObject_WMPOCXEvents_KeyPressEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnKeyPressEvent(Object sender, _WMPOCXEvents_KeyPressEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnKeyUpEventObject_WMPOCXEvents_KeyUpEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnKeyUpEvent(Object sender, _WMPOCXEvents_KeyUpEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnLibraryConnectObject_WMPOCXEvents_LibraryConnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnLibraryConnect(Object sender, _WMPOCXEvents_LibraryConnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnLibraryDisconnectObject_WMPOCXEvents_LibraryDisconnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnLibraryDisconnect(Object sender, _WMPOCXEvents_LibraryDisconnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMarkerHitObject_WMPOCXEvents_MarkerHitEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMarkerHit(Object sender, _WMPOCXEvents_MarkerHitEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaChangeObject_WMPOCXEvents_MediaChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaChange(Object sender, _WMPOCXEvents_MediaChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaCollectionAttributeStringAddedObject_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringAdded(Object sender, _WMPOCXEvents_MediaCollectionAttributeStringAddedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaCollectionAttributeStringChangedObject_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringChanged(Object sender, _WMPOCXEvents_MediaCollectionAttributeStringChangedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaCollectionAttributeStringRemovedObject_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringRemoved(Object sender, _WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaCollectionChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaCollectionMediaAddedObject_WMPOCXEvents_MediaCollectionMediaAddedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionMediaAdded(Object sender, _WMPOCXEvents_MediaCollectionMediaAddedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaCollectionMediaRemovedObject_WMPOCXEvents_MediaCollectionMediaRemovedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionMediaRemoved(Object sender, _WMPOCXEvents_MediaCollectionMediaRemovedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMediaErrorObject_WMPOCXEvents_MediaErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaError(Object sender, _WMPOCXEvents_MediaErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnModeChangeObject_WMPOCXEvents_ModeChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnModeChange(Object sender, _WMPOCXEvents_ModeChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMouseDownEventObject_WMPOCXEvents_MouseDownEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMouseDownEvent(Object sender, _WMPOCXEvents_MouseDownEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMouseMoveEventObject_WMPOCXEvents_MouseMoveEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMouseMoveEvent(Object sender, _WMPOCXEvents_MouseMoveEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnMouseUpEventObject_WMPOCXEvents_MouseUpEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMouseUpEvent(Object sender, _WMPOCXEvents_MouseUpEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnNewStreamObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnNewStream(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnOpenPlaylistSwitchObject_WMPOCXEvents_OpenPlaylistSwitchEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnOpenPlaylistSwitch(Object sender, _WMPOCXEvents_OpenPlaylistSwitchEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnOpenStateChangeObject_WMPOCXEvents_OpenStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnOpenStateChange(Object sender, _WMPOCXEvents_OpenStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlayStateChangeObject_WMPOCXEvents_PlayStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlayStateChange(Object sender, _WMPOCXEvents_PlayStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlayerDockedStateChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlayerDockedStateChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlayerReconnectObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlayerReconnect(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlaylistChangeObject_WMPOCXEvents_PlaylistChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistChange(Object sender, _WMPOCXEvents_PlaylistChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlaylistCollectionChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlaylistCollectionPlaylistAddedObject_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistAdded(Object sender, _WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlaylistCollectionPlaylistRemovedObject_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistRemoved(Object sender, _WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPlaylistCollectionPlaylistSetAsDeletedObject_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistSetAsDeleted(Object sender, _WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnPositionChangeObject_WMPOCXEvents_PositionChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPositionChange(Object sender, _WMPOCXEvents_PositionChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnScriptCommandObject_WMPOCXEvents_ScriptCommandEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnScriptCommand(Object sender, _WMPOCXEvents_ScriptCommandEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnStatusChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnStatusChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnStringCollectionChangeObject_WMPOCXEvents_StringCollectionChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnStringCollectionChange(Object sender, _WMPOCXEvents_StringCollectionChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnSwitchedToControlObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnSwitchedToControl(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnSwitchedToPlayerApplicationObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnSwitchedToPlayerApplication(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.RaiseOnWarningObject_WMPOCXEvents_WarningEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnWarning(Object sender, _WMPOCXEvents_WarningEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ScriptCommandAdd_WMPOCXEvents_ScriptCommandEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ScriptCommand(_WMPOCXEvents_ScriptCommandEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.ScriptCommandRemove_WMPOCXEvents_ScriptCommandEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ScriptCommand(_WMPOCXEvents_ScriptCommandEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.StatusChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_StatusChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.StatusChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_StatusChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.StringCollectionChangeAdd_WMPOCXEvents_StringCollectionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_StringCollectionChange(_WMPOCXEvents_StringCollectionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.StringCollectionChangeRemove_WMPOCXEvents_StringCollectionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_StringCollectionChange(_WMPOCXEvents_StringCollectionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.SwitchedToControlAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_SwitchedToControl(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.SwitchedToControlRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_SwitchedToControl(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.SwitchedToPlayerApplicationAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_SwitchedToPlayerApplication(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.SwitchedToPlayerApplicationRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_SwitchedToPlayerApplication(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.URLGet">
            <summary>设置 AxWindowsMediaPlayer.get_URL() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.URLSetString">
            <summary>设置 AxWindowsMediaPlayer.set_URL(String value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.WarningAdd_WMPOCXEvents_WarningEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_Warning(_WMPOCXEvents_WarningEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.WarningRemove_WMPOCXEvents_WarningEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_Warning(_WMPOCXEvents_WarningEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.cdromCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_cdromCollection() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.close">
            <summary>设置 AxWindowsMediaPlayer.close() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.closedCaptionGet">
            <summary>设置 AxWindowsMediaPlayer.get_closedCaption() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.currentMediaGet">
            <summary>设置 AxWindowsMediaPlayer.get_currentMedia() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.currentMediaSetIWMPMedia">
            <summary>设置 AxWindowsMediaPlayer.set_currentMedia(IWMPMedia value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.currentPlaylistGet">
            <summary>设置 AxWindowsMediaPlayer.get_currentPlaylist() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.currentPlaylistSetIWMPPlaylist">
            <summary>设置 AxWindowsMediaPlayer.set_currentPlaylist(IWMPPlaylist value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.dvdGet">
            <summary>设置 AxWindowsMediaPlayer.get_dvd() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.enableContextMenuGet">
            <summary>设置 AxWindowsMediaPlayer.get_enableContextMenu() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.enableContextMenuSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_enableContextMenu(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.fullScreenGet">
            <summary>设置 AxWindowsMediaPlayer.get_fullScreen() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.fullScreenSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_fullScreen(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.isOnlineGet">
            <summary>设置 AxWindowsMediaPlayer.get_isOnline() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.isRemoteGet">
            <summary>设置 AxWindowsMediaPlayer.get_isRemote() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.launchURLString">
            <summary>设置 AxWindowsMediaPlayer.launchURL(String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.mediaCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_mediaCollection() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.networkGet">
            <summary>设置 AxWindowsMediaPlayer.get_network() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.newMediaString">
            <summary>设置 AxWindowsMediaPlayer.newMedia(String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.newPlaylistStringString">
            <summary>设置 AxWindowsMediaPlayer.newPlaylist(String bstrName, String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.openPlayerString">
            <summary>设置 AxWindowsMediaPlayer.openPlayer(String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.openStateGet">
            <summary>设置 AxWindowsMediaPlayer.get_openState() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.playStateGet">
            <summary>设置 AxWindowsMediaPlayer.get_playState() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.playerApplicationGet">
            <summary>设置 AxWindowsMediaPlayer.get_playerApplication() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.playlistCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_playlistCollection() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.settingsGet">
            <summary>设置 AxWindowsMediaPlayer.get_settings() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.statusGet">
            <summary>设置 AxWindowsMediaPlayer.get_status() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.stretchToFitGet">
            <summary>设置 AxWindowsMediaPlayer.get_stretchToFit() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.stretchToFitSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_stretchToFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.uiModeGet">
            <summary>设置 AxWindowsMediaPlayer.get_uiMode() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.uiModeSetString">
            <summary>设置 AxWindowsMediaPlayer.set_uiMode(String value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.versionInfoGet">
            <summary>设置 AxWindowsMediaPlayer.get_versionInfo() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.windowlessVideoGet">
            <summary>设置 AxWindowsMediaPlayer.get_windowlessVideo() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AllInstances.windowlessVideoSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_windowlessVideo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AttachInterfaces">
            <summary>设置 AxWindowsMediaPlayer.AttachInterfaces() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AudioLanguageChangeAdd_WMPOCXEvents_AudioLanguageChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_AudioLanguageChange(_WMPOCXEvents_AudioLanguageChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.AudioLanguageChangeRemove_WMPOCXEvents_AudioLanguageChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_AudioLanguageChange(_WMPOCXEvents_AudioLanguageChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.ComponentModel.ISupportInitialize)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.Windows.Forms.IDropTarget)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.Windows.Forms.IWin32Window)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.BufferingAdd_WMPOCXEvents_BufferingEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_Buffering(_WMPOCXEvents_BufferingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.BufferingRemove_WMPOCXEvents_BufferingEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_Buffering(_WMPOCXEvents_BufferingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromBurnErrorAdd_WMPOCXEvents_CdromBurnErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromBurnError(_WMPOCXEvents_CdromBurnErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromBurnErrorRemove_WMPOCXEvents_CdromBurnErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromBurnError(_WMPOCXEvents_CdromBurnErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromBurnMediaErrorAdd_WMPOCXEvents_CdromBurnMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromBurnMediaError(_WMPOCXEvents_CdromBurnMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromBurnMediaErrorRemove_WMPOCXEvents_CdromBurnMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromBurnMediaError(_WMPOCXEvents_CdromBurnMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromBurnStateChangeAdd_WMPOCXEvents_CdromBurnStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromBurnStateChange(_WMPOCXEvents_CdromBurnStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromBurnStateChangeRemove_WMPOCXEvents_CdromBurnStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromBurnStateChange(_WMPOCXEvents_CdromBurnStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromMediaChangeAdd_WMPOCXEvents_CdromMediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromMediaChange(_WMPOCXEvents_CdromMediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromMediaChangeRemove_WMPOCXEvents_CdromMediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromMediaChange(_WMPOCXEvents_CdromMediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromRipMediaErrorAdd_WMPOCXEvents_CdromRipMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromRipMediaError(_WMPOCXEvents_CdromRipMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromRipMediaErrorRemove_WMPOCXEvents_CdromRipMediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromRipMediaError(_WMPOCXEvents_CdromRipMediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromRipStateChangeAdd_WMPOCXEvents_CdromRipStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CdromRipStateChange(_WMPOCXEvents_CdromRipStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CdromRipStateChangeRemove_WMPOCXEvents_CdromRipStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CdromRipStateChange(_WMPOCXEvents_CdromRipStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ClickEventAdd_WMPOCXEvents_ClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ClickEvent(_WMPOCXEvents_ClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ClickEventRemove_WMPOCXEvents_ClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ClickEvent(_WMPOCXEvents_ClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.Constructor">
            <summary>设置 AxWindowsMediaPlayer.AxWindowsMediaPlayer() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CreatePartnershipCompleteAdd_WMPOCXEvents_CreatePartnershipCompleteEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CreatePartnershipComplete(_WMPOCXEvents_CreatePartnershipCompleteEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CreatePartnershipCompleteRemove_WMPOCXEvents_CreatePartnershipCompleteEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CreatePartnershipComplete(_WMPOCXEvents_CreatePartnershipCompleteEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CreateSink">
            <summary>设置 AxWindowsMediaPlayer.CreateSink() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CtlcontrolsGet">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlcontrols() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CtlenabledGet">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlenabled() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CtlenabledSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_Ctlenabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentItemChangeAdd_WMPOCXEvents_CurrentItemChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentItemChange(_WMPOCXEvents_CurrentItemChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentItemChangeRemove_WMPOCXEvents_CurrentItemChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentItemChange(_WMPOCXEvents_CurrentItemChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentMediaItemAvailableAdd_WMPOCXEvents_CurrentMediaItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentMediaItemAvailable(_WMPOCXEvents_CurrentMediaItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentMediaItemAvailableRemove_WMPOCXEvents_CurrentMediaItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentMediaItemAvailable(_WMPOCXEvents_CurrentMediaItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentPlaylistChangeAdd_WMPOCXEvents_CurrentPlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentPlaylistChange(_WMPOCXEvents_CurrentPlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentPlaylistChangeRemove_WMPOCXEvents_CurrentPlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentPlaylistChange(_WMPOCXEvents_CurrentPlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentPlaylistItemAvailableAdd_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_CurrentPlaylistItemAvailable(_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.CurrentPlaylistItemAvailableRemove_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_CurrentPlaylistItemAvailable(_WMPOCXEvents_CurrentPlaylistItemAvailableEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DetachSink">
            <summary>设置 AxWindowsMediaPlayer.DetachSink() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceConnectAdd_WMPOCXEvents_DeviceConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceConnect(_WMPOCXEvents_DeviceConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceConnectRemove_WMPOCXEvents_DeviceConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceConnect(_WMPOCXEvents_DeviceConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceDisconnectAdd_WMPOCXEvents_DeviceDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceDisconnect(_WMPOCXEvents_DeviceDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceDisconnectRemove_WMPOCXEvents_DeviceDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceDisconnect(_WMPOCXEvents_DeviceDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceStatusChangeAdd_WMPOCXEvents_DeviceStatusChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceStatusChange(_WMPOCXEvents_DeviceStatusChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceStatusChangeRemove_WMPOCXEvents_DeviceStatusChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceStatusChange(_WMPOCXEvents_DeviceStatusChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceSyncErrorAdd_WMPOCXEvents_DeviceSyncErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceSyncError(_WMPOCXEvents_DeviceSyncErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceSyncErrorRemove_WMPOCXEvents_DeviceSyncErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceSyncError(_WMPOCXEvents_DeviceSyncErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceSyncStateChangeAdd_WMPOCXEvents_DeviceSyncStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DeviceSyncStateChange(_WMPOCXEvents_DeviceSyncStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DeviceSyncStateChangeRemove_WMPOCXEvents_DeviceSyncStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DeviceSyncStateChange(_WMPOCXEvents_DeviceSyncStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DisconnectAdd_WMPOCXEvents_DisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_Disconnect(_WMPOCXEvents_DisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DisconnectRemove_WMPOCXEvents_DisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_Disconnect(_WMPOCXEvents_DisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DomainChangeAdd_WMPOCXEvents_DomainChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DomainChange(_WMPOCXEvents_DomainChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DomainChangeRemove_WMPOCXEvents_DomainChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DomainChange(_WMPOCXEvents_DomainChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DoubleClickEventAdd_WMPOCXEvents_DoubleClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DoubleClickEvent(_WMPOCXEvents_DoubleClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DoubleClickEventRemove_WMPOCXEvents_DoubleClickEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DoubleClickEvent(_WMPOCXEvents_DoubleClickEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DurationUnitChangeAdd_WMPOCXEvents_DurationUnitChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_DurationUnitChange(_WMPOCXEvents_DurationUnitChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.DurationUnitChangeRemove_WMPOCXEvents_DurationUnitChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_DurationUnitChange(_WMPOCXEvents_DurationUnitChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.EndOfStreamAdd_WMPOCXEvents_EndOfStreamEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_EndOfStream(_WMPOCXEvents_EndOfStreamEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.EndOfStreamRemove_WMPOCXEvents_EndOfStreamEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_EndOfStream(_WMPOCXEvents_EndOfStreamEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ErrorEventAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ErrorEvent(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ErrorEventRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ErrorEvent(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ErrorGet">
            <summary>设置 AxWindowsMediaPlayer.get_Error() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.FolderScanStateChangeAdd_WMPOCXEvents_FolderScanStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_FolderScanStateChange(_WMPOCXEvents_FolderScanStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.FolderScanStateChangeRemove_WMPOCXEvents_FolderScanStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_FolderScanStateChange(_WMPOCXEvents_FolderScanStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.KeyDownEventAdd_WMPOCXEvents_KeyDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_KeyDownEvent(_WMPOCXEvents_KeyDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.KeyDownEventRemove_WMPOCXEvents_KeyDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_KeyDownEvent(_WMPOCXEvents_KeyDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.KeyPressEventAdd_WMPOCXEvents_KeyPressEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_KeyPressEvent(_WMPOCXEvents_KeyPressEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.KeyPressEventRemove_WMPOCXEvents_KeyPressEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_KeyPressEvent(_WMPOCXEvents_KeyPressEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.KeyUpEventAdd_WMPOCXEvents_KeyUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_KeyUpEvent(_WMPOCXEvents_KeyUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.KeyUpEventRemove_WMPOCXEvents_KeyUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_KeyUpEvent(_WMPOCXEvents_KeyUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.LibraryConnectAdd_WMPOCXEvents_LibraryConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_LibraryConnect(_WMPOCXEvents_LibraryConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.LibraryConnectRemove_WMPOCXEvents_LibraryConnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_LibraryConnect(_WMPOCXEvents_LibraryConnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.LibraryDisconnectAdd_WMPOCXEvents_LibraryDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_LibraryDisconnect(_WMPOCXEvents_LibraryDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.LibraryDisconnectRemove_WMPOCXEvents_LibraryDisconnectEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_LibraryDisconnect(_WMPOCXEvents_LibraryDisconnectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MarkerHitAdd_WMPOCXEvents_MarkerHitEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MarkerHit(_WMPOCXEvents_MarkerHitEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MarkerHitRemove_WMPOCXEvents_MarkerHitEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MarkerHit(_WMPOCXEvents_MarkerHitEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaChangeAdd_WMPOCXEvents_MediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaChange(_WMPOCXEvents_MediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaChangeRemove_WMPOCXEvents_MediaChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaChange(_WMPOCXEvents_MediaChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionAttributeStringAddedAdd_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionAttributeStringAdded(_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionAttributeStringAddedRemove_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionAttributeStringAdded(_WMPOCXEvents_MediaCollectionAttributeStringAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionAttributeStringChangedAdd_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionAttributeStringChanged(_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionAttributeStringChangedRemove_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionAttributeStringChanged(_WMPOCXEvents_MediaCollectionAttributeStringChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionAttributeStringRemovedAdd_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionAttributeStringRemoved(_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionAttributeStringRemovedRemove_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionAttributeStringRemoved(_WMPOCXEvents_MediaCollectionAttributeStringRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionMediaAddedAdd_WMPOCXEvents_MediaCollectionMediaAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionMediaAdded(_WMPOCXEvents_MediaCollectionMediaAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionMediaAddedRemove_WMPOCXEvents_MediaCollectionMediaAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionMediaAdded(_WMPOCXEvents_MediaCollectionMediaAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionMediaRemovedAdd_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaCollectionMediaRemoved(_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaCollectionMediaRemovedRemove_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaCollectionMediaRemoved(_WMPOCXEvents_MediaCollectionMediaRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaErrorAdd_WMPOCXEvents_MediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MediaError(_WMPOCXEvents_MediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MediaErrorRemove_WMPOCXEvents_MediaErrorEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MediaError(_WMPOCXEvents_MediaErrorEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ModeChangeAdd_WMPOCXEvents_ModeChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ModeChange(_WMPOCXEvents_ModeChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ModeChangeRemove_WMPOCXEvents_ModeChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ModeChange(_WMPOCXEvents_ModeChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MouseDownEventAdd_WMPOCXEvents_MouseDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MouseDownEvent(_WMPOCXEvents_MouseDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MouseDownEventRemove_WMPOCXEvents_MouseDownEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MouseDownEvent(_WMPOCXEvents_MouseDownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MouseMoveEventAdd_WMPOCXEvents_MouseMoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MouseMoveEvent(_WMPOCXEvents_MouseMoveEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MouseMoveEventRemove_WMPOCXEvents_MouseMoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MouseMoveEvent(_WMPOCXEvents_MouseMoveEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MouseUpEventAdd_WMPOCXEvents_MouseUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_MouseUpEvent(_WMPOCXEvents_MouseUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.MouseUpEventRemove_WMPOCXEvents_MouseUpEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_MouseUpEvent(_WMPOCXEvents_MouseUpEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.NewStreamAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_NewStream(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.NewStreamRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_NewStream(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.OpenPlaylistSwitchAdd_WMPOCXEvents_OpenPlaylistSwitchEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_OpenPlaylistSwitch(_WMPOCXEvents_OpenPlaylistSwitchEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.OpenPlaylistSwitchRemove_WMPOCXEvents_OpenPlaylistSwitchEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_OpenPlaylistSwitch(_WMPOCXEvents_OpenPlaylistSwitchEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.OpenStateChangeAdd_WMPOCXEvents_OpenStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_OpenStateChange(_WMPOCXEvents_OpenStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.OpenStateChangeRemove_WMPOCXEvents_OpenStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_OpenStateChange(_WMPOCXEvents_OpenStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlayStateChangeAdd_WMPOCXEvents_PlayStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlayStateChange(_WMPOCXEvents_PlayStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlayStateChangeRemove_WMPOCXEvents_PlayStateChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlayStateChange(_WMPOCXEvents_PlayStateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlayerDockedStateChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlayerDockedStateChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlayerDockedStateChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlayerDockedStateChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlayerReconnectAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlayerReconnect(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlayerReconnectRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlayerReconnect(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistChangeAdd_WMPOCXEvents_PlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistChange(_WMPOCXEvents_PlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistChangeRemove_WMPOCXEvents_PlaylistChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistChange(_WMPOCXEvents_PlaylistChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionPlaylistAddedAdd_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionPlaylistAdded(_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionPlaylistAddedRemove_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionPlaylistAdded(_WMPOCXEvents_PlaylistCollectionPlaylistAddedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionPlaylistRemovedAdd_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionPlaylistRemoved(_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionPlaylistRemovedRemove_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionPlaylistRemoved(_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionPlaylistSetAsDeletedAdd_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PlaylistCollectionPlaylistSetAsDeleted(_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PlaylistCollectionPlaylistSetAsDeletedRemove_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PlaylistCollectionPlaylistSetAsDeleted(_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PositionChangeAdd_WMPOCXEvents_PositionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_PositionChange(_WMPOCXEvents_PositionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.PositionChangeRemove_WMPOCXEvents_PositionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_PositionChange(_WMPOCXEvents_PositionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnAudioLanguageChangeObject_WMPOCXEvents_AudioLanguageChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnAudioLanguageChange(Object sender, _WMPOCXEvents_AudioLanguageChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnBufferingObject_WMPOCXEvents_BufferingEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnBuffering(Object sender, _WMPOCXEvents_BufferingEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCdromBurnErrorObject_WMPOCXEvents_CdromBurnErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromBurnError(Object sender, _WMPOCXEvents_CdromBurnErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCdromBurnMediaErrorObject_WMPOCXEvents_CdromBurnMediaErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromBurnMediaError(Object sender, _WMPOCXEvents_CdromBurnMediaErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCdromBurnStateChangeObject_WMPOCXEvents_CdromBurnStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromBurnStateChange(Object sender, _WMPOCXEvents_CdromBurnStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCdromMediaChangeObject_WMPOCXEvents_CdromMediaChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromMediaChange(Object sender, _WMPOCXEvents_CdromMediaChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCdromRipMediaErrorObject_WMPOCXEvents_CdromRipMediaErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromRipMediaError(Object sender, _WMPOCXEvents_CdromRipMediaErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCdromRipStateChangeObject_WMPOCXEvents_CdromRipStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCdromRipStateChange(Object sender, _WMPOCXEvents_CdromRipStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnClickEventObject_WMPOCXEvents_ClickEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnClickEvent(Object sender, _WMPOCXEvents_ClickEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCreatePartnershipCompleteObject_WMPOCXEvents_CreatePartnershipCompleteEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCreatePartnershipComplete(Object sender, _WMPOCXEvents_CreatePartnershipCompleteEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCurrentItemChangeObject_WMPOCXEvents_CurrentItemChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentItemChange(Object sender, _WMPOCXEvents_CurrentItemChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCurrentMediaItemAvailableObject_WMPOCXEvents_CurrentMediaItemAvailableEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentMediaItemAvailable(Object sender, _WMPOCXEvents_CurrentMediaItemAvailableEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCurrentPlaylistChangeObject_WMPOCXEvents_CurrentPlaylistChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentPlaylistChange(Object sender, _WMPOCXEvents_CurrentPlaylistChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnCurrentPlaylistItemAvailableObject_WMPOCXEvents_CurrentPlaylistItemAvailableEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnCurrentPlaylistItemAvailable(Object sender, _WMPOCXEvents_CurrentPlaylistItemAvailableEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDeviceConnectObject_WMPOCXEvents_DeviceConnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceConnect(Object sender, _WMPOCXEvents_DeviceConnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDeviceDisconnectObject_WMPOCXEvents_DeviceDisconnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceDisconnect(Object sender, _WMPOCXEvents_DeviceDisconnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDeviceStatusChangeObject_WMPOCXEvents_DeviceStatusChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceStatusChange(Object sender, _WMPOCXEvents_DeviceStatusChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDeviceSyncErrorObject_WMPOCXEvents_DeviceSyncErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceSyncError(Object sender, _WMPOCXEvents_DeviceSyncErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDeviceSyncStateChangeObject_WMPOCXEvents_DeviceSyncStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDeviceSyncStateChange(Object sender, _WMPOCXEvents_DeviceSyncStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDisconnectObject_WMPOCXEvents_DisconnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDisconnect(Object sender, _WMPOCXEvents_DisconnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDomainChangeObject_WMPOCXEvents_DomainChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDomainChange(Object sender, _WMPOCXEvents_DomainChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDoubleClickEventObject_WMPOCXEvents_DoubleClickEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDoubleClickEvent(Object sender, _WMPOCXEvents_DoubleClickEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnDurationUnitChangeObject_WMPOCXEvents_DurationUnitChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnDurationUnitChange(Object sender, _WMPOCXEvents_DurationUnitChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnEndOfStreamObject_WMPOCXEvents_EndOfStreamEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnEndOfStream(Object sender, _WMPOCXEvents_EndOfStreamEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnErrorEventObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnErrorEvent(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnFolderScanStateChangeObject_WMPOCXEvents_FolderScanStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnFolderScanStateChange(Object sender, _WMPOCXEvents_FolderScanStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnKeyDownEventObject_WMPOCXEvents_KeyDownEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnKeyDownEvent(Object sender, _WMPOCXEvents_KeyDownEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnKeyPressEventObject_WMPOCXEvents_KeyPressEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnKeyPressEvent(Object sender, _WMPOCXEvents_KeyPressEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnKeyUpEventObject_WMPOCXEvents_KeyUpEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnKeyUpEvent(Object sender, _WMPOCXEvents_KeyUpEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnLibraryConnectObject_WMPOCXEvents_LibraryConnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnLibraryConnect(Object sender, _WMPOCXEvents_LibraryConnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnLibraryDisconnectObject_WMPOCXEvents_LibraryDisconnectEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnLibraryDisconnect(Object sender, _WMPOCXEvents_LibraryDisconnectEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMarkerHitObject_WMPOCXEvents_MarkerHitEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMarkerHit(Object sender, _WMPOCXEvents_MarkerHitEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaChangeObject_WMPOCXEvents_MediaChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaChange(Object sender, _WMPOCXEvents_MediaChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringAddedObject_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringAdded(Object sender, _WMPOCXEvents_MediaCollectionAttributeStringAddedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringChangedObject_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringChanged(Object sender, _WMPOCXEvents_MediaCollectionAttributeStringChangedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringRemovedObject_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionAttributeStringRemoved(Object sender, _WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaCollectionChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaCollectionMediaAddedObject_WMPOCXEvents_MediaCollectionMediaAddedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionMediaAdded(Object sender, _WMPOCXEvents_MediaCollectionMediaAddedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaCollectionMediaRemovedObject_WMPOCXEvents_MediaCollectionMediaRemovedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaCollectionMediaRemoved(Object sender, _WMPOCXEvents_MediaCollectionMediaRemovedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMediaErrorObject_WMPOCXEvents_MediaErrorEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMediaError(Object sender, _WMPOCXEvents_MediaErrorEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnModeChangeObject_WMPOCXEvents_ModeChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnModeChange(Object sender, _WMPOCXEvents_ModeChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMouseDownEventObject_WMPOCXEvents_MouseDownEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMouseDownEvent(Object sender, _WMPOCXEvents_MouseDownEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMouseMoveEventObject_WMPOCXEvents_MouseMoveEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMouseMoveEvent(Object sender, _WMPOCXEvents_MouseMoveEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnMouseUpEventObject_WMPOCXEvents_MouseUpEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnMouseUpEvent(Object sender, _WMPOCXEvents_MouseUpEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnNewStreamObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnNewStream(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnOpenPlaylistSwitchObject_WMPOCXEvents_OpenPlaylistSwitchEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnOpenPlaylistSwitch(Object sender, _WMPOCXEvents_OpenPlaylistSwitchEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnOpenStateChangeObject_WMPOCXEvents_OpenStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnOpenStateChange(Object sender, _WMPOCXEvents_OpenStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlayStateChangeObject_WMPOCXEvents_PlayStateChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlayStateChange(Object sender, _WMPOCXEvents_PlayStateChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlayerDockedStateChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlayerDockedStateChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlayerReconnectObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlayerReconnect(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlaylistChangeObject_WMPOCXEvents_PlaylistChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistChange(Object sender, _WMPOCXEvents_PlaylistChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlaylistCollectionChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistAddedObject_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistAdded(Object sender, _WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistRemovedObject_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistRemoved(Object sender, _WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistSetAsDeletedObject_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPlaylistCollectionPlaylistSetAsDeleted(Object sender, _WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnPositionChangeObject_WMPOCXEvents_PositionChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnPositionChange(Object sender, _WMPOCXEvents_PositionChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnScriptCommandObject_WMPOCXEvents_ScriptCommandEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnScriptCommand(Object sender, _WMPOCXEvents_ScriptCommandEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnStatusChangeObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnStatusChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnStringCollectionChangeObject_WMPOCXEvents_StringCollectionChangeEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnStringCollectionChange(Object sender, _WMPOCXEvents_StringCollectionChangeEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnSwitchedToControlObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnSwitchedToControl(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnSwitchedToPlayerApplicationObjectEventArgs">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnSwitchedToPlayerApplication(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.RaiseOnWarningObject_WMPOCXEvents_WarningEvent">
            <summary>设置 AxWindowsMediaPlayer.RaiseOnWarning(Object sender, _WMPOCXEvents_WarningEvent e) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ScriptCommandAdd_WMPOCXEvents_ScriptCommandEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_ScriptCommand(_WMPOCXEvents_ScriptCommandEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.ScriptCommandRemove_WMPOCXEvents_ScriptCommandEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_ScriptCommand(_WMPOCXEvents_ScriptCommandEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.StatusChangeAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_StatusChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.StatusChangeRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_StatusChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.StringCollectionChangeAdd_WMPOCXEvents_StringCollectionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_StringCollectionChange(_WMPOCXEvents_StringCollectionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.StringCollectionChangeRemove_WMPOCXEvents_StringCollectionChangeEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_StringCollectionChange(_WMPOCXEvents_StringCollectionChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.SwitchedToControlAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_SwitchedToControl(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.SwitchedToControlRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_SwitchedToControl(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.SwitchedToPlayerApplicationAddEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_SwitchedToPlayerApplication(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.SwitchedToPlayerApplicationRemoveEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_SwitchedToPlayerApplication(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.URLGet">
            <summary>设置 AxWindowsMediaPlayer.get_URL() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.URLSetString">
            <summary>设置 AxWindowsMediaPlayer.set_URL(String value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.WarningAdd_WMPOCXEvents_WarningEventHandler">
            <summary>设置 AxWindowsMediaPlayer.add_Warning(_WMPOCXEvents_WarningEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.WarningRemove_WMPOCXEvents_WarningEventHandler">
            <summary>设置 AxWindowsMediaPlayer.remove_Warning(_WMPOCXEvents_WarningEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.cdromCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_cdromCollection() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.close">
            <summary>设置 AxWindowsMediaPlayer.close() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.closedCaptionGet">
            <summary>设置 AxWindowsMediaPlayer.get_closedCaption() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.currentMediaGet">
            <summary>设置 AxWindowsMediaPlayer.get_currentMedia() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.currentMediaSetIWMPMedia">
            <summary>设置 AxWindowsMediaPlayer.set_currentMedia(IWMPMedia value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.currentPlaylistGet">
            <summary>设置 AxWindowsMediaPlayer.get_currentPlaylist() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.currentPlaylistSetIWMPPlaylist">
            <summary>设置 AxWindowsMediaPlayer.set_currentPlaylist(IWMPPlaylist value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.dvdGet">
            <summary>设置 AxWindowsMediaPlayer.get_dvd() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.enableContextMenuGet">
            <summary>设置 AxWindowsMediaPlayer.get_enableContextMenu() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.enableContextMenuSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_enableContextMenu(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.fullScreenGet">
            <summary>设置 AxWindowsMediaPlayer.get_fullScreen() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.fullScreenSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_fullScreen(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.isOnlineGet">
            <summary>设置 AxWindowsMediaPlayer.get_isOnline() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.isRemoteGet">
            <summary>设置 AxWindowsMediaPlayer.get_isRemote() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.launchURLString">
            <summary>设置 AxWindowsMediaPlayer.launchURL(String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.mediaCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_mediaCollection() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.networkGet">
            <summary>设置 AxWindowsMediaPlayer.get_network() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.newMediaString">
            <summary>设置 AxWindowsMediaPlayer.newMedia(String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.newPlaylistStringString">
            <summary>设置 AxWindowsMediaPlayer.newPlaylist(String bstrName, String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.openPlayerString">
            <summary>设置 AxWindowsMediaPlayer.openPlayer(String bstrURL) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.openStateGet">
            <summary>设置 AxWindowsMediaPlayer.get_openState() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.playStateGet">
            <summary>设置 AxWindowsMediaPlayer.get_playState() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.playerApplicationGet">
            <summary>设置 AxWindowsMediaPlayer.get_playerApplication() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.playlistCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_playlistCollection() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.settingsGet">
            <summary>设置 AxWindowsMediaPlayer.get_settings() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.statusGet">
            <summary>设置 AxWindowsMediaPlayer.get_status() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.stretchToFitGet">
            <summary>设置 AxWindowsMediaPlayer.get_stretchToFit() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.stretchToFitSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_stretchToFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.uiModeGet">
            <summary>设置 AxWindowsMediaPlayer.get_uiMode() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.uiModeSetString">
            <summary>设置 AxWindowsMediaPlayer.set_uiMode(String value) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.versionInfoGet">
            <summary>设置 AxWindowsMediaPlayer.get_versionInfo() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.windowlessVideoGet">
            <summary>设置 AxWindowsMediaPlayer.get_windowlessVideo() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayer.windowlessVideoSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_windowlessVideo(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster">
            <summary>AxWMPLib.AxWindowsMediaPlayerEventMulticaster 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.#ctor(AxWMPLib.AxWindowsMediaPlayerEventMulticaster)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.AudioLanguageChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.AudioLanguageChange(Int32 langID) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.BufferingBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Buffering(Boolean start) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CdromBurnErrorIWMPCdromBurnInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnError(IWMPCdromBurn pCdromBurn, Int32 hrError) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CdromBurnMediaErrorIWMPCdromBurnObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnMediaError(IWMPCdromBurn pCdromBurn, Object pMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CdromBurnStateChangeIWMPCdromBurnWMPBurnState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnStateChange(IWMPCdromBurn pCdromBurn, WMPBurnState wmpbs) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CdromMediaChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromMediaChange(Int32 cdromNum) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CdromRipMediaErrorIWMPCdromRipObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipMediaError(IWMPCdromRip pCdromRip, Object pMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CdromRipStateChangeIWMPCdromRipWMPRipState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipStateChange(IWMPCdromRip pCdromRip, WMPRipState wmprs) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.ClickInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Click(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CreatePartnershipCompleteIWMPSyncDeviceInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CreatePartnershipComplete(IWMPSyncDevice pDevice, Int32 hrResult) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CurrentItemChangeObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentItemChange(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CurrentMediaItemAvailableString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailable(String bstrItemName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CurrentPlaylistChangeWMPPlaylistChangeEventType">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChange(WMPPlaylistChangeEventType change) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.CurrentPlaylistItemAvailableString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailable(String bstrItemName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DeviceConnectIWMPSyncDevice">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceConnect(IWMPSyncDevice pDevice) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DeviceDisconnectIWMPSyncDevice">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceDisconnect(IWMPSyncDevice pDevice) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DeviceStatusChangeIWMPSyncDeviceWMPDeviceStatus">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceStatusChange(IWMPSyncDevice pDevice, WMPDeviceStatus newStatus) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DeviceSyncErrorIWMPSyncDeviceObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncError(IWMPSyncDevice pDevice, Object pMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DeviceSyncStateChangeIWMPSyncDeviceWMPSyncState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChange(IWMPSyncDevice pDevice, WMPSyncState newState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DisconnectInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Disconnect(Int32 result) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DomainChangeString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DomainChange(String strDomain) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DoubleClickInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DoubleClick(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.DurationUnitChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DurationUnitChange(Int32 newDurationUnit) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.EndOfStreamInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.EndOfStream(Int32 result) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.Error">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Error() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.FolderScanStateChangeWMPFolderScanState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.FolderScanStateChange(WMPFolderScanState wmpfss) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.KeyDownInt16Int16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyDown(Int16 nKeyCode, Int16 nShiftState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.KeyPressInt16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyPress(Int16 nKeyAscii) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.KeyUpInt16Int16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyUp(Int16 nKeyCode, Int16 nShiftState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.LibraryConnectIWMPLibrary">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryConnect(IWMPLibrary pLibrary) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.LibraryDisconnectIWMPLibrary">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryDisconnect(IWMPLibrary pLibrary) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MarkerHitInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MarkerHit(Int32 markerNum) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaChangeObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaChange(Object item) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaCollectionAttributeStringAddedStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAdded(String bstrAttribName, String bstrAttribVal) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaCollectionAttributeStringChangedStringStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChanged(String bstrAttribName, String bstrOldAttribVal, String bstrNewAttribVal) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaCollectionAttributeStringRemovedStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemoved(String bstrAttribName, String bstrAttribVal) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaCollectionChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaCollectionMediaAddedObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAdded(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaCollectionMediaRemovedObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemoved(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MediaErrorObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaError(Object pMediaObject) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.ModeChangeStringBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ModeChange(String modeName, Boolean newValue) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MouseDownInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseDown(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MouseMoveInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseMove(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.MouseUpInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseUp(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.NewStream">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.NewStream() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.OpenPlaylistSwitchObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitch(Object pItem) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.OpenStateChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenStateChange(Int32 newState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlayStateChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayStateChange(Int32 newState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlayerDockedStateChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlayerReconnect">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerReconnect() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlaylistChangeObjectWMPPlaylistChangeEventType">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistChange(Object playlist, WMPPlaylistChangeEventType change) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlaylistCollectionChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlaylistCollectionPlaylistAddedString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAdded(String bstrPlaylistName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlaylistCollectionPlaylistRemovedString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemoved(String bstrPlaylistName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PlaylistCollectionPlaylistSetAsDeletedStringBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeleted(String bstrPlaylistName, Boolean varfIsDeleted) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.PositionChangeDoubleDouble">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PositionChange(Double oldPosition, Double newPosition) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.ScriptCommandStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ScriptCommand(String scType, String param) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.StatusChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StatusChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.StringCollectionChangeObjectWMPStringCollectionChangeEventTypeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StringCollectionChange(Object pdispStringCollection, WMPStringCollectionChangeEventType change, Int32 lCollectionIndex) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.SwitchedToControl">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToControl() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.SwitchedToPlayerApplication">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AllInstances.WarningInt32Int32String">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Warning(Int32 warningType, Int32 param, String description) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.AudioLanguageChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.AudioLanguageChange(Int32 langID) 的 填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.Bind(WMPLib._WMPOCXEvents)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.BufferingBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Buffering(Boolean start) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CdromBurnErrorIWMPCdromBurnInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnError(IWMPCdromBurn pCdromBurn, Int32 hrError) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CdromBurnMediaErrorIWMPCdromBurnObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnMediaError(IWMPCdromBurn pCdromBurn, Object pMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CdromBurnStateChangeIWMPCdromBurnWMPBurnState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnStateChange(IWMPCdromBurn pCdromBurn, WMPBurnState wmpbs) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CdromMediaChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromMediaChange(Int32 cdromNum) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CdromRipMediaErrorIWMPCdromRipObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipMediaError(IWMPCdromRip pCdromRip, Object pMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CdromRipStateChangeIWMPCdromRipWMPRipState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipStateChange(IWMPCdromRip pCdromRip, WMPRipState wmprs) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.ClickInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Click(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.ConstructorAxWindowsMediaPlayer">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.AxWindowsMediaPlayerEventMulticaster(AxWindowsMediaPlayer parent) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CreatePartnershipCompleteIWMPSyncDeviceInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CreatePartnershipComplete(IWMPSyncDevice pDevice, Int32 hrResult) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CurrentItemChangeObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentItemChange(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailableString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailable(String bstrItemName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChangeWMPPlaylistChangeEventType">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChange(WMPPlaylistChangeEventType change) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailableString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailable(String bstrItemName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DeviceConnectIWMPSyncDevice">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceConnect(IWMPSyncDevice pDevice) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DeviceDisconnectIWMPSyncDevice">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceDisconnect(IWMPSyncDevice pDevice) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DeviceStatusChangeIWMPSyncDeviceWMPDeviceStatus">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceStatusChange(IWMPSyncDevice pDevice, WMPDeviceStatus newStatus) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DeviceSyncErrorIWMPSyncDeviceObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncError(IWMPSyncDevice pDevice, Object pMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChangeIWMPSyncDeviceWMPSyncState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChange(IWMPSyncDevice pDevice, WMPSyncState newState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DisconnectInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Disconnect(Int32 result) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DomainChangeString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DomainChange(String strDomain) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DoubleClickInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DoubleClick(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.DurationUnitChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DurationUnitChange(Int32 newDurationUnit) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.EndOfStreamInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.EndOfStream(Int32 result) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.Error">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Error() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.FolderScanStateChangeWMPFolderScanState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.FolderScanStateChange(WMPFolderScanState wmpfss) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.KeyDownInt16Int16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyDown(Int16 nKeyCode, Int16 nShiftState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.KeyPressInt16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyPress(Int16 nKeyAscii) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.KeyUpInt16Int16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyUp(Int16 nKeyCode, Int16 nShiftState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.LibraryConnectIWMPLibrary">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryConnect(IWMPLibrary pLibrary) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.LibraryDisconnectIWMPLibrary">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryDisconnect(IWMPLibrary pLibrary) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MarkerHitInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MarkerHit(Int32 markerNum) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaChangeObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaChange(Object item) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAddedStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAdded(String bstrAttribName, String bstrAttribVal) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChangedStringStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChanged(String bstrAttribName, String bstrOldAttribVal, String bstrNewAttribVal) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemovedStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemoved(String bstrAttribName, String bstrAttribVal) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaCollectionChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAddedObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAdded(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemovedObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemoved(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MediaErrorObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaError(Object pMediaObject) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.ModeChangeStringBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ModeChange(String modeName, Boolean newValue) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MouseDownInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseDown(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MouseMoveInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseMove(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.MouseUpInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseUp(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.NewStream">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.NewStream() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitchObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitch(Object pItem) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.OpenStateChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenStateChange(Int32 newState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlayStateChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayStateChange(Int32 newState) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlayerReconnect">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerReconnect() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlaylistChangeObjectWMPPlaylistChangeEventType">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistChange(Object playlist, WMPPlaylistChangeEventType change) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAddedString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAdded(String bstrPlaylistName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemovedString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemoved(String bstrPlaylistName) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeletedStringBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeleted(String bstrPlaylistName, Boolean varfIsDeleted) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.PositionChangeDoubleDouble">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PositionChange(Double oldPosition, Double newPosition) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.ScriptCommandStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ScriptCommand(String scType, String param) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.StatusChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StatusChange() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.StringCollectionChangeObjectWMPStringCollectionChangeEventTypeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StringCollectionChange(Object pdispStringCollection, WMPStringCollectionChangeEventType change, Int32 lCollectionIndex) 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.SwitchedToControl">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToControl() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication() 的 填充码</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.ShimAxWindowsMediaPlayerEventMulticaster.WarningInt32Int32String">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Warning(Int32 warningType, Int32 param, String description) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_AudioLanguageChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_AudioLanguageChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_AudioLanguageChangeEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_AudioLanguageChangeEvent._WMPOCXEvents_AudioLanguageChangeEvent(Int32 langID) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent">
            <summary>AxWMPLib._WMPOCXEvents_BufferingEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.#ctor(AxWMPLib._WMPOCXEvents_BufferingEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_BufferingEvent.ConstructorBoolean">
            <summary>设置 _WMPOCXEvents_BufferingEvent._WMPOCXEvents_BufferingEvent(Boolean start) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromBurnErrorEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.#ctor(AxWMPLib._WMPOCXEvents_CdromBurnErrorEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnErrorEvent.ConstructorIWMPCdromBurnInt32">
            <summary>设置 _WMPOCXEvents_CdromBurnErrorEvent._WMPOCXEvents_CdromBurnErrorEvent(IWMPCdromBurn pCdromBurn, Int32 hrError) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromBurnMediaErrorEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.#ctor(AxWMPLib._WMPOCXEvents_CdromBurnMediaErrorEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnMediaErrorEvent.ConstructorIWMPCdromBurnObject">
            <summary>设置 _WMPOCXEvents_CdromBurnMediaErrorEvent._WMPOCXEvents_CdromBurnMediaErrorEvent(IWMPCdromBurn pCdromBurn, Object pMedia) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromBurnStateChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_CdromBurnStateChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromBurnStateChangeEvent.ConstructorIWMPCdromBurnWMPBurnState">
            <summary>设置 _WMPOCXEvents_CdromBurnStateChangeEvent._WMPOCXEvents_CdromBurnStateChangeEvent(IWMPCdromBurn pCdromBurn, WMPBurnState wmpbs) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromMediaChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_CdromMediaChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromMediaChangeEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_CdromMediaChangeEvent._WMPOCXEvents_CdromMediaChangeEvent(Int32 cdromNum) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromRipMediaErrorEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.#ctor(AxWMPLib._WMPOCXEvents_CdromRipMediaErrorEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipMediaErrorEvent.ConstructorIWMPCdromRipObject">
            <summary>设置 _WMPOCXEvents_CdromRipMediaErrorEvent._WMPOCXEvents_CdromRipMediaErrorEvent(IWMPCdromRip pCdromRip, Object pMedia) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromRipStateChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_CdromRipStateChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CdromRipStateChangeEvent.ConstructorIWMPCdromRipWMPRipState">
            <summary>设置 _WMPOCXEvents_CdromRipStateChangeEvent._WMPOCXEvents_CdromRipStateChangeEvent(IWMPCdromRip pCdromRip, WMPRipState wmprs) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent">
            <summary>AxWMPLib._WMPOCXEvents_ClickEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.#ctor(AxWMPLib._WMPOCXEvents_ClickEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_ClickEvent.ConstructorInt16Int16Int32Int32">
            <summary>设置 _WMPOCXEvents_ClickEvent._WMPOCXEvents_ClickEvent(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent">
            <summary>AxWMPLib._WMPOCXEvents_CreatePartnershipCompleteEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.#ctor(AxWMPLib._WMPOCXEvents_CreatePartnershipCompleteEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CreatePartnershipCompleteEvent.ConstructorIWMPSyncDeviceInt32">
            <summary>设置 _WMPOCXEvents_CreatePartnershipCompleteEvent._WMPOCXEvents_CreatePartnershipCompleteEvent(IWMPSyncDevice pDevice, Int32 hrResult) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentItemChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_CurrentItemChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentItemChangeEvent.ConstructorObject">
            <summary>设置 _WMPOCXEvents_CurrentItemChangeEvent._WMPOCXEvents_CurrentItemChangeEvent(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentMediaItemAvailableEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.#ctor(AxWMPLib._WMPOCXEvents_CurrentMediaItemAvailableEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentMediaItemAvailableEvent.ConstructorString">
            <summary>设置 _WMPOCXEvents_CurrentMediaItemAvailableEvent._WMPOCXEvents_CurrentMediaItemAvailableEvent(String bstrItemName) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentPlaylistChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_CurrentPlaylistChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistChangeEvent.ConstructorWMPPlaylistChangeEventType">
            <summary>设置 _WMPOCXEvents_CurrentPlaylistChangeEvent._WMPOCXEvents_CurrentPlaylistChangeEvent(WMPPlaylistChangeEventType change) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentPlaylistItemAvailableEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.#ctor(AxWMPLib._WMPOCXEvents_CurrentPlaylistItemAvailableEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.ConstructorString">
            <summary>设置 _WMPOCXEvents_CurrentPlaylistItemAvailableEvent._WMPOCXEvents_CurrentPlaylistItemAvailableEvent(String bstrItemName) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceConnectEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.#ctor(AxWMPLib._WMPOCXEvents_DeviceConnectEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceConnectEvent.ConstructorIWMPSyncDevice">
            <summary>设置 _WMPOCXEvents_DeviceConnectEvent._WMPOCXEvents_DeviceConnectEvent(IWMPSyncDevice pDevice) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceDisconnectEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.#ctor(AxWMPLib._WMPOCXEvents_DeviceDisconnectEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceDisconnectEvent.ConstructorIWMPSyncDevice">
            <summary>设置 _WMPOCXEvents_DeviceDisconnectEvent._WMPOCXEvents_DeviceDisconnectEvent(IWMPSyncDevice pDevice) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceStatusChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_DeviceStatusChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceStatusChangeEvent.ConstructorIWMPSyncDeviceWMPDeviceStatus">
            <summary>设置 _WMPOCXEvents_DeviceStatusChangeEvent._WMPOCXEvents_DeviceStatusChangeEvent(IWMPSyncDevice pDevice, WMPDeviceStatus newStatus) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceSyncErrorEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.#ctor(AxWMPLib._WMPOCXEvents_DeviceSyncErrorEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncErrorEvent.ConstructorIWMPSyncDeviceObject">
            <summary>设置 _WMPOCXEvents_DeviceSyncErrorEvent._WMPOCXEvents_DeviceSyncErrorEvent(IWMPSyncDevice pDevice, Object pMedia) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceSyncStateChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_DeviceSyncStateChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DeviceSyncStateChangeEvent.ConstructorIWMPSyncDeviceWMPSyncState">
            <summary>设置 _WMPOCXEvents_DeviceSyncStateChangeEvent._WMPOCXEvents_DeviceSyncStateChangeEvent(IWMPSyncDevice pDevice, WMPSyncState newState) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_DisconnectEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.#ctor(AxWMPLib._WMPOCXEvents_DisconnectEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DisconnectEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_DisconnectEvent._WMPOCXEvents_DisconnectEvent(Int32 result) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DomainChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_DomainChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DomainChangeEvent.ConstructorString">
            <summary>设置 _WMPOCXEvents_DomainChangeEvent._WMPOCXEvents_DomainChangeEvent(String strDomain) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent">
            <summary>AxWMPLib._WMPOCXEvents_DoubleClickEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.#ctor(AxWMPLib._WMPOCXEvents_DoubleClickEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DoubleClickEvent.ConstructorInt16Int16Int32Int32">
            <summary>设置 _WMPOCXEvents_DoubleClickEvent._WMPOCXEvents_DoubleClickEvent(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DurationUnitChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_DurationUnitChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_DurationUnitChangeEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_DurationUnitChangeEvent._WMPOCXEvents_DurationUnitChangeEvent(Int32 newDurationUnit) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent">
            <summary>AxWMPLib._WMPOCXEvents_EndOfStreamEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.#ctor(AxWMPLib._WMPOCXEvents_EndOfStreamEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_EndOfStreamEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_EndOfStreamEvent._WMPOCXEvents_EndOfStreamEvent(Int32 result) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_FolderScanStateChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_FolderScanStateChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_FolderScanStateChangeEvent.ConstructorWMPFolderScanState">
            <summary>设置 _WMPOCXEvents_FolderScanStateChangeEvent._WMPOCXEvents_FolderScanStateChangeEvent(WMPFolderScanState wmpfss) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent">
            <summary>AxWMPLib._WMPOCXEvents_KeyDownEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.#ctor(AxWMPLib._WMPOCXEvents_KeyDownEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyDownEvent.ConstructorInt16Int16">
            <summary>设置 _WMPOCXEvents_KeyDownEvent._WMPOCXEvents_KeyDownEvent(Int16 nKeyCode, Int16 nShiftState) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent">
            <summary>AxWMPLib._WMPOCXEvents_KeyPressEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.#ctor(AxWMPLib._WMPOCXEvents_KeyPressEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyPressEvent.ConstructorInt16">
            <summary>设置 _WMPOCXEvents_KeyPressEvent._WMPOCXEvents_KeyPressEvent(Int16 nKeyAscii) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent">
            <summary>AxWMPLib._WMPOCXEvents_KeyUpEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.#ctor(AxWMPLib._WMPOCXEvents_KeyUpEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_KeyUpEvent.ConstructorInt16Int16">
            <summary>设置 _WMPOCXEvents_KeyUpEvent._WMPOCXEvents_KeyUpEvent(Int16 nKeyCode, Int16 nShiftState) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_LibraryConnectEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.#ctor(AxWMPLib._WMPOCXEvents_LibraryConnectEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryConnectEvent.ConstructorIWMPLibrary">
            <summary>设置 _WMPOCXEvents_LibraryConnectEvent._WMPOCXEvents_LibraryConnectEvent(IWMPLibrary pLibrary) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_LibraryDisconnectEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.#ctor(AxWMPLib._WMPOCXEvents_LibraryDisconnectEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_LibraryDisconnectEvent.ConstructorIWMPLibrary">
            <summary>设置 _WMPOCXEvents_LibraryDisconnectEvent._WMPOCXEvents_LibraryDisconnectEvent(IWMPLibrary pLibrary) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent">
            <summary>AxWMPLib._WMPOCXEvents_MarkerHitEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.#ctor(AxWMPLib._WMPOCXEvents_MarkerHitEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MarkerHitEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_MarkerHitEvent._WMPOCXEvents_MarkerHitEvent(Int32 markerNum) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaChangeEvent.ConstructorObject">
            <summary>设置 _WMPOCXEvents_MediaChangeEvent._WMPOCXEvents_MediaChangeEvent(Object item) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringAddedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringAddedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.ConstructorStringString">
            <summary>设置 _WMPOCXEvents_MediaCollectionAttributeStringAddedEvent._WMPOCXEvents_MediaCollectionAttributeStringAddedEvent(String bstrAttribName, String bstrAttribVal) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringChangedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringChangedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.ConstructorStringStringString">
            <summary>设置 _WMPOCXEvents_MediaCollectionAttributeStringChangedEvent._WMPOCXEvents_MediaCollectionAttributeStringChangedEvent(String bstrAttribName, String bstrOldAttribVal, String bstrNewAttribVal) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.ConstructorStringString">
            <summary>设置 _WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent._WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent(String bstrAttribName, String bstrAttribVal) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionMediaAddedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaCollectionMediaAddedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaAddedEvent.ConstructorObject">
            <summary>设置 _WMPOCXEvents_MediaCollectionMediaAddedEvent._WMPOCXEvents_MediaCollectionMediaAddedEvent(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionMediaRemovedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaCollectionMediaRemovedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaCollectionMediaRemovedEvent.ConstructorObject">
            <summary>设置 _WMPOCXEvents_MediaCollectionMediaRemovedEvent._WMPOCXEvents_MediaCollectionMediaRemovedEvent(Object pdispMedia) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaErrorEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.#ctor(AxWMPLib._WMPOCXEvents_MediaErrorEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MediaErrorEvent.ConstructorObject">
            <summary>设置 _WMPOCXEvents_MediaErrorEvent._WMPOCXEvents_MediaErrorEvent(Object pMediaObject) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_ModeChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_ModeChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_ModeChangeEvent.ConstructorStringBoolean">
            <summary>设置 _WMPOCXEvents_ModeChangeEvent._WMPOCXEvents_ModeChangeEvent(String modeName, Boolean newValue) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent">
            <summary>AxWMPLib._WMPOCXEvents_MouseDownEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.#ctor(AxWMPLib._WMPOCXEvents_MouseDownEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseDownEvent.ConstructorInt16Int16Int32Int32">
            <summary>设置 _WMPOCXEvents_MouseDownEvent._WMPOCXEvents_MouseDownEvent(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent">
            <summary>AxWMPLib._WMPOCXEvents_MouseMoveEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.#ctor(AxWMPLib._WMPOCXEvents_MouseMoveEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseMoveEvent.ConstructorInt16Int16Int32Int32">
            <summary>设置 _WMPOCXEvents_MouseMoveEvent._WMPOCXEvents_MouseMoveEvent(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent">
            <summary>AxWMPLib._WMPOCXEvents_MouseUpEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.#ctor(AxWMPLib._WMPOCXEvents_MouseUpEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_MouseUpEvent.ConstructorInt16Int16Int32Int32">
            <summary>设置 _WMPOCXEvents_MouseUpEvent._WMPOCXEvents_MouseUpEvent(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent">
            <summary>AxWMPLib._WMPOCXEvents_OpenPlaylistSwitchEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.#ctor(AxWMPLib._WMPOCXEvents_OpenPlaylistSwitchEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenPlaylistSwitchEvent.ConstructorObject">
            <summary>设置 _WMPOCXEvents_OpenPlaylistSwitchEvent._WMPOCXEvents_OpenPlaylistSwitchEvent(Object pItem) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_OpenStateChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_OpenStateChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_OpenStateChangeEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_OpenStateChangeEvent._WMPOCXEvents_OpenStateChangeEvent(Int32 newState) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlayStateChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_PlayStateChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlayStateChangeEvent.ConstructorInt32">
            <summary>设置 _WMPOCXEvents_PlayStateChangeEvent._WMPOCXEvents_PlayStateChangeEvent(Int32 newState) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_PlaylistChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistChangeEvent.ConstructorObjectWMPPlaylistChangeEventType">
            <summary>设置 _WMPOCXEvents_PlaylistChangeEvent._WMPOCXEvents_PlaylistChangeEvent(Object playlist, WMPPlaylistChangeEventType change) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.#ctor(AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.ConstructorString">
            <summary>设置 _WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent._WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent(String bstrPlaylistName) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.#ctor(AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.ConstructorString">
            <summary>设置 _WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent._WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent(String bstrPlaylistName) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.#ctor(AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.ConstructorStringBoolean">
            <summary>设置 _WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent._WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent(String bstrPlaylistName, Boolean varfIsDeleted) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_PositionChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_PositionChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_PositionChangeEvent.ConstructorDoubleDouble">
            <summary>设置 _WMPOCXEvents_PositionChangeEvent._WMPOCXEvents_PositionChangeEvent(Double oldPosition, Double newPosition) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent">
            <summary>AxWMPLib._WMPOCXEvents_ScriptCommandEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.#ctor(AxWMPLib._WMPOCXEvents_ScriptCommandEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_ScriptCommandEvent.ConstructorStringString">
            <summary>设置 _WMPOCXEvents_ScriptCommandEvent._WMPOCXEvents_ScriptCommandEvent(String scType, String param) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_StringCollectionChangeEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.#ctor(AxWMPLib._WMPOCXEvents_StringCollectionChangeEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_StringCollectionChangeEvent.ConstructorObjectWMPStringCollectionChangeEventTypeInt32">
            <summary>设置 _WMPOCXEvents_StringCollectionChangeEvent._WMPOCXEvents_StringCollectionChangeEvent(Object pdispStringCollection, WMPStringCollectionChangeEventType change, Int32 lCollectionIndex) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent">
            <summary>AxWMPLib._WMPOCXEvents_WarningEvent 的填充码类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.#ctor(AxWMPLib._WMPOCXEvents_WarningEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Shim_WMPOCXEvents_WarningEvent.ConstructorInt32Int32String">
            <summary>设置 _WMPOCXEvents_WarningEvent._WMPOCXEvents_WarningEvent(Int32 warningType, Int32 param, String description) 的 填充码</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.StubAxWindowsMediaPlayer">
            <summary>AxWMPLib.AxWindowsMediaPlayer 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AllowDrop">
            <summary>设置 Control.get_AllowDrop() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AllowDropGet">
            <summary>设置 Control.get_AllowDrop() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AllowDropSetBoolean">
            <summary>设置 Control.set_AllowDrop(Boolean value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Anchor">
            <summary>设置 Control.get_Anchor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AnchorGet">
            <summary>设置 Control.get_Anchor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AnchorSetAnchorStyles">
            <summary>设置 Control.set_Anchor(AnchorStyles value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToAllowDrop">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.AllowDrop 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToAnchor">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Anchor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToAutoScrollOffset">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.AutoScrollOffset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToAutoSize">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.AutoSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToBackColor">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.BackColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToBackgroundImage">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.BackgroundImage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToBackgroundImageLayout">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.BackgroundImageLayout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToBindingContext">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.BindingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToContextMenu">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.ContextMenu 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToContextMenuStrip">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.ContextMenuStrip 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToCtlenabled">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Ctlenabled 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToCursor">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Cursor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToDock">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Dock 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToDoubleBuffered">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.DoubleBuffered 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToEnabled">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Enabled 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToFont">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Font 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToForeColor">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.ForeColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToImeModeBase">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.ImeModeBase 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToMaximumSize">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.MaximumSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToMinimumSize">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.MinimumSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToRightToLeft">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.RightToLeft 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToText">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToURL">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.URL 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldTocurrentMedia">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.currentMedia 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldTocurrentPlaylist">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.currentPlaylist 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldToenableContextMenu">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.enableContextMenu 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldTofullScreen">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.fullScreen 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldTostretchToFit">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.stretchToFit 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldTouiMode">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.uiMode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachBackingFieldTowindowlessVideo">
            <summary>附加委托以将 StubAxWindowsMediaPlayer.windowlessVideo 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachInterfaces">
            <summary>设置 AxWindowsMediaPlayer.AttachInterfaces() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AttachInterfaces01">
            <summary>设置 AxWindowsMediaPlayer.AttachInterfaces() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AutoScrollOffset">
            <summary>设置 Control.get_AutoScrollOffset() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AutoScrollOffsetGet">
            <summary>设置 Control.get_AutoScrollOffset() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AutoScrollOffsetSetPoint">
            <summary>设置 Control.set_AutoScrollOffset(Point value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AutoSize">
            <summary>设置 Control.get_AutoSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AutoSizeGet">
            <summary>设置 Control.get_AutoSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.AutoSizeSetBoolean">
            <summary>设置 Control.set_AutoSize(Boolean value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackColor">
            <summary>设置 AxHost.get_BackColor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackColorGet">
            <summary>设置 AxHost.get_BackColor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackColorSetColor">
            <summary>设置 AxHost.set_BackColor(Color value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackgroundImage">
            <summary>设置 AxHost.get_BackgroundImage() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackgroundImageGet">
            <summary>设置 AxHost.get_BackgroundImage() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackgroundImageLayout">
            <summary>设置 AxHost.get_BackgroundImageLayout() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackgroundImageLayoutGet">
            <summary>设置 AxHost.get_BackgroundImageLayout() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackgroundImageLayoutSetImageLayout">
            <summary>设置 AxHost.set_BackgroundImageLayout(ImageLayout value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BackgroundImageSetImage">
            <summary>设置 AxHost.set_BackgroundImage(Image value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BindingContext">
            <summary>设置 Control.get_BindingContext() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BindingContextGet">
            <summary>设置 Control.get_BindingContext() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.BindingContextSetBindingContext">
            <summary>设置 Control.set_BindingContext(BindingContext value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CanEnableIme">
            <summary>设置 Control.get_CanEnableIme() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CanEnableImeGet">
            <summary>设置 Control.get_CanEnableIme() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CanRaiseEvents">
            <summary>设置 Control.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CanRaiseEventsGet">
            <summary>设置 Control.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CdromCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_cdromCollection() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Close">
            <summary>设置 AxWindowsMediaPlayer.close() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ClosedCaptionGet">
            <summary>设置 AxWindowsMediaPlayer.get_closedCaption() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ContextMenu">
            <summary>设置 AxHost.get_ContextMenu() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ContextMenuGet">
            <summary>设置 AxHost.get_ContextMenu() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ContextMenuSetContextMenu">
            <summary>设置 AxHost.set_ContextMenu(ContextMenu value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ContextMenuStrip">
            <summary>设置 Control.get_ContextMenuStrip() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ContextMenuStripGet">
            <summary>设置 Control.get_ContextMenuStrip() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ContextMenuStripSetContextMenuStrip">
            <summary>设置 Control.set_ContextMenuStrip(ContextMenuStrip value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateAccessibilityInstance">
            <summary>设置 Control.CreateAccessibilityInstance() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateAccessibilityInstance01">
            <summary>设置 Control.CreateAccessibilityInstance() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateControlsInstance">
            <summary>设置 Control.CreateControlsInstance() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateControlsInstance01">
            <summary>设置 Control.CreateControlsInstance() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateHandle">
            <summary>设置 AxHost.CreateHandle() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateHandle01">
            <summary>设置 AxHost.CreateHandle() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateInstanceCore(System.Guid)">
            <summary>设置 AxHost.CreateInstanceCore(Guid clsid) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateInstanceCoreGuid">
            <summary>设置 AxHost.CreateInstanceCore(Guid clsid) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateParams">
            <summary>设置 AxHost.get_CreateParams() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateParamsGet">
            <summary>设置 AxHost.get_CreateParams() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateSink">
            <summary>设置 AxWindowsMediaPlayer.CreateSink() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CreateSink01">
            <summary>设置 AxWindowsMediaPlayer.CreateSink() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Ctlcontrols">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlcontrols() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CtlcontrolsGet">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlcontrols() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Ctlenabled">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlenabled() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CtlenabledGet">
            <summary>设置 AxWindowsMediaPlayer.get_Ctlenabled() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CtlenabledSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_Ctlenabled(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CurrentMediaGet">
            <summary>设置 AxWindowsMediaPlayer.get_currentMedia() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CurrentMediaSetIWMPMedia">
            <summary>设置 AxWindowsMediaPlayer.set_currentMedia(IWMPMedia value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CurrentPlaylistGet">
            <summary>设置 AxWindowsMediaPlayer.get_currentPlaylist() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CurrentPlaylistSetIWMPPlaylist">
            <summary>设置 AxWindowsMediaPlayer.set_currentPlaylist(IWMPPlaylist value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Cursor">
            <summary>设置 AxHost.get_Cursor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CursorGet">
            <summary>设置 AxHost.get_Cursor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.CursorSetCursor">
            <summary>设置 AxHost.set_Cursor(Cursor value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefWndProc(System.Windows.Forms.Message@)">
            <summary>设置 Control.DefWndProc(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefWndProcMessageRef">
            <summary>设置 Control.DefWndProc(Message&amp; m) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultCursor">
            <summary>设置 Control.get_DefaultCursor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultCursorGet">
            <summary>设置 Control.get_DefaultCursor() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultImeMode">
            <summary>设置 Control.get_DefaultImeMode() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultImeModeGet">
            <summary>设置 Control.get_DefaultImeMode() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultMargin">
            <summary>设置 Control.get_DefaultMargin() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultMarginGet">
            <summary>设置 Control.get_DefaultMargin() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultMaximumSize">
            <summary>设置 Control.get_DefaultMaximumSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultMaximumSizeGet">
            <summary>设置 Control.get_DefaultMaximumSize() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultMinimumSize">
            <summary>设置 Control.get_DefaultMinimumSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultMinimumSizeGet">
            <summary>设置 Control.get_DefaultMinimumSize() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultPadding">
            <summary>设置 Control.get_DefaultPadding() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultPaddingGet">
            <summary>设置 Control.get_DefaultPadding() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultSize">
            <summary>设置 AxHost.get_DefaultSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DefaultSizeGet">
            <summary>设置 AxHost.get_DefaultSize() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DestroyHandle">
            <summary>设置 AxHost.DestroyHandle() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DestroyHandle01">
            <summary>设置 AxHost.DestroyHandle() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DetachSink">
            <summary>设置 AxWindowsMediaPlayer.DetachSink() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DetachSink01">
            <summary>设置 AxWindowsMediaPlayer.DetachSink() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DisplayRectangle">
            <summary>设置 Control.get_DisplayRectangle() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DisplayRectangleGet">
            <summary>设置 Control.get_DisplayRectangle() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Dispose(System.Boolean)">
            <summary>设置 AxHost.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DisposeBoolean">
            <summary>设置 AxHost.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Dock">
            <summary>设置 Control.get_Dock() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DockGet">
            <summary>设置 Control.get_Dock() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DockSetDockStyle">
            <summary>设置 Control.set_Dock(DockStyle value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DoubleBuffered">
            <summary>设置 Control.get_DoubleBuffered() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DoubleBufferedGet">
            <summary>设置 Control.get_DoubleBuffered() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DoubleBufferedSetBoolean">
            <summary>设置 Control.set_DoubleBuffered(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.DvdGet">
            <summary>设置 AxWindowsMediaPlayer.get_dvd() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.EnableContextMenuGet">
            <summary>设置 AxWindowsMediaPlayer.get_enableContextMenu() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.EnableContextMenuSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_enableContextMenu(Boolean value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Enabled">
            <summary>设置 AxHost.get_Enabled() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.EnabledGet">
            <summary>设置 AxHost.get_Enabled() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.EnabledSetBoolean">
            <summary>设置 AxHost.set_Enabled(Boolean value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Error">
            <summary>设置 AxWindowsMediaPlayer.get_Error() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ErrorGet">
            <summary>设置 AxWindowsMediaPlayer.get_Error() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Focused">
            <summary>设置 Control.get_Focused() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.FocusedGet">
            <summary>设置 Control.get_Focused() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Font">
            <summary>设置 AxHost.get_Font() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.FontGet">
            <summary>设置 AxHost.get_Font() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.FontSetFont">
            <summary>设置 AxHost.set_Font(Font value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ForeColor">
            <summary>设置 AxHost.get_ForeColor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ForeColorGet">
            <summary>设置 AxHost.get_ForeColor() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ForeColorSetColor">
            <summary>设置 AxHost.set_ForeColor(Color value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.FullScreenGet">
            <summary>设置 AxWindowsMediaPlayer.get_fullScreen() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.FullScreenSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_fullScreen(Boolean value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetAccessibilityObjectById(System.Int32)">
            <summary>设置 Control.GetAccessibilityObjectById(Int32 objectId) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetAccessibilityObjectByIdInt32">
            <summary>设置 Control.GetAccessibilityObjectById(Int32 objectId) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetPreferredSize(System.Drawing.Size)">
            <summary>设置 Control.GetPreferredSize(Size proposedSize) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetPreferredSizeSize">
            <summary>设置 Control.GetPreferredSize(Size proposedSize) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>设置 AxHost.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>设置 AxHost.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetService(System.Type)">
            <summary>设置 Component.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.GetServiceType">
            <summary>设置 Component.GetService(Type service) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ImeModeBase">
            <summary>设置 Control.get_ImeModeBase() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ImeModeBaseGet">
            <summary>设置 Control.get_ImeModeBase() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ImeModeBaseSetImeMode">
            <summary>设置 Control.set_ImeModeBase(ImeMode value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.InitLayout">
            <summary>设置 Control.InitLayout() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.InitLayout01">
            <summary>设置 Control.InitLayout() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.InitializeStub">
            <summary>初始化 type StubAxWindowsMediaPlayer 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.IsInputChar(System.Char)">
            <summary>设置 AxHost.IsInputChar(Char charCode) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.IsInputCharChar">
            <summary>设置 AxHost.IsInputChar(Char charCode) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.IsInputKey(System.Windows.Forms.Keys)">
            <summary>设置 Control.IsInputKey(Keys keyData) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.IsInputKeyKeys">
            <summary>设置 Control.IsInputKey(Keys keyData) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.IsOnlineGet">
            <summary>设置 AxWindowsMediaPlayer.get_isOnline() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.IsRemoteGet">
            <summary>设置 AxWindowsMediaPlayer.get_isRemote() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.LaunchURLString">
            <summary>设置 AxWindowsMediaPlayer.launchURL(String bstrURL) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.LayoutEngine">
            <summary>设置 Control.get_LayoutEngine() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.LayoutEngineGet">
            <summary>设置 Control.get_LayoutEngine() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MaximumSize">
            <summary>设置 Control.get_MaximumSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MaximumSizeGet">
            <summary>设置 Control.get_MaximumSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MaximumSizeSetSize">
            <summary>设置 Control.set_MaximumSize(Size value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MediaCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_mediaCollection() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MinimumSize">
            <summary>设置 Control.get_MinimumSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MinimumSizeGet">
            <summary>设置 Control.get_MinimumSize() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.MinimumSizeSetSize">
            <summary>设置 Control.set_MinimumSize(Size value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.NetworkGet">
            <summary>设置 AxWindowsMediaPlayer.get_network() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.NewMediaString">
            <summary>设置 AxWindowsMediaPlayer.newMedia(String bstrURL) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.NewPlaylistStringString">
            <summary>设置 AxWindowsMediaPlayer.newPlaylist(String bstrName, String bstrURL) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>设置 Control.NotifyInvalidate(Rectangle invalidatedArea) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.NotifyInvalidateRectangle">
            <summary>设置 Control.NotifyInvalidate(Rectangle invalidatedArea) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnAutoSizeChanged(System.EventArgs)">
            <summary>设置 Control.OnAutoSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnAutoSizeChangedEventArgs">
            <summary>设置 Control.OnAutoSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBackColorChanged(System.EventArgs)">
            <summary>设置 AxHost.OnBackColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBackColorChangedEventArgs">
            <summary>设置 AxHost.OnBackColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBackgroundImageChanged(System.EventArgs)">
            <summary>设置 Control.OnBackgroundImageChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBackgroundImageChangedEventArgs">
            <summary>设置 Control.OnBackgroundImageChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>设置 Control.OnBackgroundImageLayoutChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBackgroundImageLayoutChangedEventArgs">
            <summary>设置 Control.OnBackgroundImageLayoutChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBindingContextChanged(System.EventArgs)">
            <summary>设置 Control.OnBindingContextChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnBindingContextChangedEventArgs">
            <summary>设置 Control.OnBindingContextChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnCausesValidationChanged(System.EventArgs)">
            <summary>设置 Control.OnCausesValidationChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnCausesValidationChangedEventArgs">
            <summary>设置 Control.OnCausesValidationChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>设置 Control.OnChangeUICues(UICuesEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnChangeUICuesUICuesEventArgs">
            <summary>设置 Control.OnChangeUICues(UICuesEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnClick(System.EventArgs)">
            <summary>设置 Control.OnClick(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnClickEventArgs">
            <summary>设置 Control.OnClick(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnClientSizeChanged(System.EventArgs)">
            <summary>设置 Control.OnClientSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnClientSizeChangedEventArgs">
            <summary>设置 Control.OnClientSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnContextMenuChanged(System.EventArgs)">
            <summary>设置 Control.OnContextMenuChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnContextMenuChangedEventArgs">
            <summary>设置 Control.OnContextMenuChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnContextMenuStripChanged(System.EventArgs)">
            <summary>设置 Control.OnContextMenuStripChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnContextMenuStripChangedEventArgs">
            <summary>设置 Control.OnContextMenuStripChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>设置 Control.OnControlAdded(ControlEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnControlAddedControlEventArgs">
            <summary>设置 Control.OnControlAdded(ControlEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>设置 Control.OnControlRemoved(ControlEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnControlRemovedControlEventArgs">
            <summary>设置 Control.OnControlRemoved(ControlEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnCreateControl">
            <summary>设置 Control.OnCreateControl() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnCreateControl01">
            <summary>设置 Control.OnCreateControl() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnCursorChanged(System.EventArgs)">
            <summary>设置 Control.OnCursorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnCursorChangedEventArgs">
            <summary>设置 Control.OnCursorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDockChanged(System.EventArgs)">
            <summary>设置 Control.OnDockChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDockChangedEventArgs">
            <summary>设置 Control.OnDockChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDoubleClick(System.EventArgs)">
            <summary>设置 Control.OnDoubleClick(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDoubleClickEventArgs">
            <summary>设置 Control.OnDoubleClick(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>设置 Control.OnDragDrop(DragEventArgs drgevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragDropDragEventArgs">
            <summary>设置 Control.OnDragDrop(DragEventArgs drgevent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>设置 Control.OnDragEnter(DragEventArgs drgevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragEnterDragEventArgs">
            <summary>设置 Control.OnDragEnter(DragEventArgs drgevent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragLeave(System.EventArgs)">
            <summary>设置 Control.OnDragLeave(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragLeaveEventArgs">
            <summary>设置 Control.OnDragLeave(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>设置 Control.OnDragOver(DragEventArgs drgevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnDragOverDragEventArgs">
            <summary>设置 Control.OnDragOver(DragEventArgs drgevent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnEnabledChanged(System.EventArgs)">
            <summary>设置 Control.OnEnabledChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnEnabledChangedEventArgs">
            <summary>设置 Control.OnEnabledChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnEnter(System.EventArgs)">
            <summary>设置 Control.OnEnter(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnEnterEventArgs">
            <summary>设置 Control.OnEnter(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnFontChanged(System.EventArgs)">
            <summary>设置 AxHost.OnFontChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnFontChangedEventArgs">
            <summary>设置 AxHost.OnFontChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnForeColorChanged(System.EventArgs)">
            <summary>设置 AxHost.OnForeColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnForeColorChangedEventArgs">
            <summary>设置 AxHost.OnForeColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>设置 Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>设置 Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnGotFocus(System.EventArgs)">
            <summary>设置 Control.OnGotFocus(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnGotFocusEventArgs">
            <summary>设置 Control.OnGotFocus(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnHandleCreated(System.EventArgs)">
            <summary>设置 AxHost.OnHandleCreated(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnHandleCreatedEventArgs">
            <summary>设置 AxHost.OnHandleCreated(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnHandleDestroyed(System.EventArgs)">
            <summary>设置 Control.OnHandleDestroyed(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnHandleDestroyedEventArgs">
            <summary>设置 Control.OnHandleDestroyed(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>设置 Control.OnHelpRequested(HelpEventArgs hevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnHelpRequestedHelpEventArgs">
            <summary>设置 Control.OnHelpRequested(HelpEventArgs hevent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnImeModeChanged(System.EventArgs)">
            <summary>设置 Control.OnImeModeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnImeModeChangedEventArgs">
            <summary>设置 Control.OnImeModeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnInPlaceActive">
            <summary>设置 AxHost.OnInPlaceActive() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnInPlaceActive01">
            <summary>设置 AxHost.OnInPlaceActive() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>设置 Control.OnInvalidated(InvalidateEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnInvalidatedInvalidateEventArgs">
            <summary>设置 Control.OnInvalidated(InvalidateEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>设置 Control.OnKeyDown(KeyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnKeyDownKeyEventArgs">
            <summary>设置 Control.OnKeyDown(KeyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>设置 Control.OnKeyPress(KeyPressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnKeyPressKeyPressEventArgs">
            <summary>设置 Control.OnKeyPress(KeyPressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>设置 Control.OnKeyUp(KeyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnKeyUpKeyEventArgs">
            <summary>设置 Control.OnKeyUp(KeyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>设置 Control.OnLayout(LayoutEventArgs levent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLayoutLayoutEventArgs">
            <summary>设置 Control.OnLayout(LayoutEventArgs levent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLeave(System.EventArgs)">
            <summary>设置 Control.OnLeave(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLeaveEventArgs">
            <summary>设置 Control.OnLeave(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLocationChanged(System.EventArgs)">
            <summary>设置 Control.OnLocationChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLocationChangedEventArgs">
            <summary>设置 Control.OnLocationChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLostFocus(System.EventArgs)">
            <summary>设置 AxHost.OnLostFocus(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnLostFocusEventArgs">
            <summary>设置 AxHost.OnLostFocus(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMarginChanged(System.EventArgs)">
            <summary>设置 Control.OnMarginChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMarginChangedEventArgs">
            <summary>设置 Control.OnMarginChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseCaptureChanged(System.EventArgs)">
            <summary>设置 Control.OnMouseCaptureChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseCaptureChangedEventArgs">
            <summary>设置 Control.OnMouseCaptureChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseClick(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseClickMouseEventArgs">
            <summary>设置 Control.OnMouseClick(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseDoubleClick(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseDoubleClickMouseEventArgs">
            <summary>设置 Control.OnMouseDoubleClick(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseDown(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseDownMouseEventArgs">
            <summary>设置 Control.OnMouseDown(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseEnter(System.EventArgs)">
            <summary>设置 Control.OnMouseEnter(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseEnterEventArgs">
            <summary>设置 Control.OnMouseEnter(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseHover(System.EventArgs)">
            <summary>设置 Control.OnMouseHover(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseHoverEventArgs">
            <summary>设置 Control.OnMouseHover(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseLeave(System.EventArgs)">
            <summary>设置 Control.OnMouseLeave(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseLeaveEventArgs">
            <summary>设置 Control.OnMouseLeave(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseMove(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseMoveMouseEventArgs">
            <summary>设置 Control.OnMouseMove(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseUp(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseUpMouseEventArgs">
            <summary>设置 Control.OnMouseUp(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseWheel(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMouseWheelMouseEventArgs">
            <summary>设置 Control.OnMouseWheel(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMove(System.EventArgs)">
            <summary>设置 Control.OnMove(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnMoveEventArgs">
            <summary>设置 Control.OnMove(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>设置 Control.OnNotifyMessage(Message m) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnNotifyMessageMessage">
            <summary>设置 Control.OnNotifyMessage(Message m) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPaddingChanged(System.EventArgs)">
            <summary>设置 Control.OnPaddingChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPaddingChangedEventArgs">
            <summary>设置 Control.OnPaddingChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>设置 Control.OnPaint(PaintEventArgs e) 的 存根</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>设置 Control.OnPaintBackground(PaintEventArgs pevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPaintBackgroundPaintEventArgs">
            <summary>设置 Control.OnPaintBackground(PaintEventArgs pevent) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPaintPaintEventArgs">
            <summary>设置 Control.OnPaint(PaintEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentBackColorChanged(System.EventArgs)">
            <summary>设置 Control.OnParentBackColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentBackColorChangedEventArgs">
            <summary>设置 Control.OnParentBackColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>设置 Control.OnParentBackgroundImageChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentBackgroundImageChangedEventArgs">
            <summary>设置 Control.OnParentBackgroundImageChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentBindingContextChanged(System.EventArgs)">
            <summary>设置 Control.OnParentBindingContextChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentBindingContextChangedEventArgs">
            <summary>设置 Control.OnParentBindingContextChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentChanged(System.EventArgs)">
            <summary>设置 Control.OnParentChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentChangedEventArgs">
            <summary>设置 Control.OnParentChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentCursorChanged(System.EventArgs)">
            <summary>设置 Control.OnParentCursorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentCursorChangedEventArgs">
            <summary>设置 Control.OnParentCursorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentEnabledChanged(System.EventArgs)">
            <summary>设置 Control.OnParentEnabledChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentEnabledChangedEventArgs">
            <summary>设置 Control.OnParentEnabledChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentFontChanged(System.EventArgs)">
            <summary>设置 Control.OnParentFontChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentFontChangedEventArgs">
            <summary>设置 Control.OnParentFontChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentForeColorChanged(System.EventArgs)">
            <summary>设置 Control.OnParentForeColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentForeColorChangedEventArgs">
            <summary>设置 Control.OnParentForeColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>设置 Control.OnParentRightToLeftChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentRightToLeftChangedEventArgs">
            <summary>设置 Control.OnParentRightToLeftChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentVisibleChanged(System.EventArgs)">
            <summary>设置 Control.OnParentVisibleChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnParentVisibleChangedEventArgs">
            <summary>设置 Control.OnParentVisibleChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>设置 Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>设置 Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>设置 Control.OnPrint(PaintEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnPrintPaintEventArgs">
            <summary>设置 Control.OnPrint(PaintEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>设置 Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>设置 Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnRegionChanged(System.EventArgs)">
            <summary>设置 Control.OnRegionChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnRegionChangedEventArgs">
            <summary>设置 Control.OnRegionChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnResize(System.EventArgs)">
            <summary>设置 Control.OnResize(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnResizeEventArgs">
            <summary>设置 Control.OnResize(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnRightToLeftChanged(System.EventArgs)">
            <summary>设置 Control.OnRightToLeftChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnRightToLeftChangedEventArgs">
            <summary>设置 Control.OnRightToLeftChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnSizeChanged(System.EventArgs)">
            <summary>设置 Control.OnSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnSizeChangedEventArgs">
            <summary>设置 Control.OnSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnStyleChanged(System.EventArgs)">
            <summary>设置 Control.OnStyleChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnStyleChangedEventArgs">
            <summary>设置 Control.OnStyleChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnSystemColorsChanged(System.EventArgs)">
            <summary>设置 Control.OnSystemColorsChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnSystemColorsChangedEventArgs">
            <summary>设置 Control.OnSystemColorsChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnTabIndexChanged(System.EventArgs)">
            <summary>设置 Control.OnTabIndexChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnTabIndexChangedEventArgs">
            <summary>设置 Control.OnTabIndexChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnTabStopChanged(System.EventArgs)">
            <summary>设置 Control.OnTabStopChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnTabStopChangedEventArgs">
            <summary>设置 Control.OnTabStopChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnTextChanged(System.EventArgs)">
            <summary>设置 Control.OnTextChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnTextChangedEventArgs">
            <summary>设置 Control.OnTextChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnValidated(System.EventArgs)">
            <summary>设置 Control.OnValidated(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnValidatedEventArgs">
            <summary>设置 Control.OnValidated(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>设置 Control.OnValidating(CancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnValidatingCancelEventArgs">
            <summary>设置 Control.OnValidating(CancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnVisibleChanged(System.EventArgs)">
            <summary>设置 Control.OnVisibleChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OnVisibleChangedEventArgs">
            <summary>设置 Control.OnVisibleChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OpenPlayerString">
            <summary>设置 AxWindowsMediaPlayer.openPlayer(String bstrURL) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.OpenStateGet">
            <summary>设置 AxWindowsMediaPlayer.get_openState() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.PlayStateGet">
            <summary>设置 AxWindowsMediaPlayer.get_playState() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.PlayerApplicationGet">
            <summary>设置 AxWindowsMediaPlayer.get_playerApplication() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.PlaylistCollectionGet">
            <summary>设置 AxWindowsMediaPlayer.get_playlistCollection() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>设置 AxHost.PreProcessMessage(Message&amp; msg) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.PreProcessMessageMessageRef">
            <summary>设置 AxHost.PreProcessMessage(Message&amp; msg) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>设置 Control.ProcessCmdKey(Message&amp; msg, Keys keyData) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessCmdKeyMessageRefKeys">
            <summary>设置 Control.ProcessCmdKey(Message&amp; msg, Keys keyData) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessDialogChar(System.Char)">
            <summary>设置 Control.ProcessDialogChar(Char charCode) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessDialogCharChar">
            <summary>设置 Control.ProcessDialogChar(Char charCode) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>设置 AxHost.ProcessDialogKey(Keys keyData) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessDialogKeyKeys">
            <summary>设置 AxHost.ProcessDialogKey(Keys keyData) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>设置 Control.ProcessKeyEventArgs(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessKeyEventArgsMessageRef">
            <summary>设置 Control.ProcessKeyEventArgs(Message&amp; m) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>设置 Control.ProcessKeyMessage(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessKeyMessageMessageRef">
            <summary>设置 Control.ProcessKeyMessage(Message&amp; m) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>设置 Control.ProcessKeyPreview(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessKeyPreviewMessageRef">
            <summary>设置 Control.ProcessKeyPreview(Message&amp; m) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessMnemonic(System.Char)">
            <summary>设置 AxHost.ProcessMnemonic(Char charCode) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ProcessMnemonicChar">
            <summary>设置 AxHost.ProcessMnemonic(Char charCode) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Refresh">
            <summary>设置 Control.Refresh() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Refresh01">
            <summary>设置 Control.Refresh() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetBackColor">
            <summary>设置 Control.ResetBackColor() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetBackColor01">
            <summary>设置 Control.ResetBackColor() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetCursor">
            <summary>设置 Control.ResetCursor() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetCursor01">
            <summary>设置 Control.ResetCursor() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetFont">
            <summary>设置 Control.ResetFont() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetFont01">
            <summary>设置 Control.ResetFont() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetForeColor">
            <summary>设置 Control.ResetForeColor() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetForeColor01">
            <summary>设置 Control.ResetForeColor() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetRightToLeft">
            <summary>设置 Control.ResetRightToLeft() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetRightToLeft01">
            <summary>设置 Control.ResetRightToLeft() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetText">
            <summary>设置 Control.ResetText() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ResetText01">
            <summary>设置 Control.ResetText() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.RightToLeft">
            <summary>设置 AxHost.get_RightToLeft() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.RightToLeftGet">
            <summary>设置 AxHost.get_RightToLeft() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.RightToLeftSetBoolean">
            <summary>设置 AxHost.set_RightToLeft(Boolean value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ScaleChildren">
            <summary>设置 Control.get_ScaleChildren() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ScaleChildrenGet">
            <summary>设置 Control.get_ScaleChildren() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>设置 Control.ScaleControl(SizeF factor, BoundsSpecified specified) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ScaleControlSizeFBoundsSpecified">
            <summary>设置 Control.ScaleControl(SizeF factor, BoundsSpecified specified) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ScaleCore(System.Single,System.Single)">
            <summary>设置 Control.ScaleCore(Single dx, Single dy) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ScaleCoreSingleSingle">
            <summary>设置 Control.ScaleCore(Single dx, Single dy) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Select(System.Boolean,System.Boolean)">
            <summary>设置 Control.Select(Boolean directed, Boolean forward) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SelectBooleanBoolean">
            <summary>设置 Control.Select(Boolean directed, Boolean forward) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>设置 AxHost.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>设置 AxHost.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>设置 Control.SetClientSizeCore(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SetClientSizeCoreInt32Int32">
            <summary>设置 Control.SetClientSizeCore(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SetVisibleCore(System.Boolean)">
            <summary>设置 AxHost.SetVisibleCore(Boolean value) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SetVisibleCoreBoolean">
            <summary>设置 AxHost.SetVisibleCore(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SettingsGet">
            <summary>设置 AxWindowsMediaPlayer.get_settings() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ShowFocusCues">
            <summary>设置 Control.get_ShowFocusCues() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ShowFocusCuesGet">
            <summary>设置 Control.get_ShowFocusCues() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ShowKeyboardCues">
            <summary>设置 Control.get_ShowKeyboardCues() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ShowKeyboardCuesGet">
            <summary>设置 Control.get_ShowKeyboardCues() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Site">
            <summary>设置 AxHost.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SiteSetISite">
            <summary>设置 AxHost.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SizeFromClientSize(System.Drawing.Size)">
            <summary>设置 Control.SizeFromClientSize(Size clientSize) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.SizeFromClientSizeSize">
            <summary>设置 Control.SizeFromClientSize(Size clientSize) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.StatusGet">
            <summary>设置 AxWindowsMediaPlayer.get_status() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.StretchToFitGet">
            <summary>设置 AxWindowsMediaPlayer.get_stretchToFit() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.StretchToFitSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_stretchToFit(Boolean value) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.Text">
            <summary>设置 AxHost.get_Text() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.TextGet">
            <summary>设置 AxHost.get_Text() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.TextSetString">
            <summary>设置 AxHost.set_Text(String value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ToString">
            <summary>设置 Component.ToString() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.ToString01">
            <summary>设置 Component.ToString() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.URL">
            <summary>设置 AxWindowsMediaPlayer.get_URL() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.URLGet">
            <summary>设置 AxWindowsMediaPlayer.get_URL() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.URLSetString">
            <summary>设置 AxWindowsMediaPlayer.set_URL(String value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.UiModeGet">
            <summary>设置 AxWindowsMediaPlayer.get_uiMode() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.UiModeSetString">
            <summary>设置 AxWindowsMediaPlayer.set_uiMode(String value) 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.VersionInfoGet">
            <summary>设置 AxWindowsMediaPlayer.get_versionInfo() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.WindowlessVideoGet">
            <summary>设置 AxWindowsMediaPlayer.get_windowlessVideo() 的 stub</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.WindowlessVideoSetBoolean">
            <summary>设置 AxWindowsMediaPlayer.set_windowlessVideo(Boolean value) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.WndProc(System.Windows.Forms.Message@)">
            <summary>设置 AxHost.WndProc(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.WndProcMessageRef">
            <summary>设置 AxHost.WndProc(Message&amp; m) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.cdromCollection">
            <summary>设置 AxWindowsMediaPlayer.get_cdromCollection() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.close">
            <summary>设置 AxWindowsMediaPlayer.close() 的 存根</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.closedCaption">
            <summary>设置 AxWindowsMediaPlayer.get_closedCaption() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.currentMedia">
            <summary>设置 AxWindowsMediaPlayer.get_currentMedia() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.currentPlaylist">
            <summary>设置 AxWindowsMediaPlayer.get_currentPlaylist() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.dvd">
            <summary>设置 AxWindowsMediaPlayer.get_dvd() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.enableContextMenu">
            <summary>设置 AxWindowsMediaPlayer.get_enableContextMenu() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.fullScreen">
            <summary>设置 AxWindowsMediaPlayer.get_fullScreen() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.isOnline">
            <summary>设置 AxWindowsMediaPlayer.get_isOnline() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.isRemote">
            <summary>设置 AxWindowsMediaPlayer.get_isRemote() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.launchURL(System.String)">
            <summary>设置 AxWindowsMediaPlayer.launchURL(String bstrURL) 的 存根</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.mediaCollection">
            <summary>设置 AxWindowsMediaPlayer.get_mediaCollection() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.network">
            <summary>设置 AxWindowsMediaPlayer.get_network() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.newMedia(System.String)">
            <summary>设置 AxWindowsMediaPlayer.newMedia(String bstrURL) 的 存根</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.newPlaylist(System.String,System.String)">
            <summary>设置 AxWindowsMediaPlayer.newPlaylist(String bstrName, String bstrURL) 的 存根</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.openPlayer(System.String)">
            <summary>设置 AxWindowsMediaPlayer.openPlayer(String bstrURL) 的 存根</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.openState">
            <summary>设置 AxWindowsMediaPlayer.get_openState() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.playState">
            <summary>设置 AxWindowsMediaPlayer.get_playState() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.playerApplication">
            <summary>设置 AxWindowsMediaPlayer.get_playerApplication() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.playlistCollection">
            <summary>设置 AxWindowsMediaPlayer.get_playlistCollection() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.settings">
            <summary>设置 AxWindowsMediaPlayer.get_settings() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.status">
            <summary>设置 AxWindowsMediaPlayer.get_status() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.stretchToFit">
            <summary>设置 AxWindowsMediaPlayer.get_stretchToFit() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.uiMode">
            <summary>设置 AxWindowsMediaPlayer.get_uiMode() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.versionInfo">
            <summary>设置 AxWindowsMediaPlayer.get_versionInfo() 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayer.windowlessVideo">
            <summary>设置 AxWindowsMediaPlayer.get_windowlessVideo() 的 stub</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster">
            <summary>AxWMPLib.AxWindowsMediaPlayerEventMulticaster 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.#ctor(AxWMPLib.AxWindowsMediaPlayer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.AudioLanguageChange(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.AudioLanguageChange(Int32 langID) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.AudioLanguageChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.AudioLanguageChange(Int32 langID) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.Buffering(System.Boolean)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Buffering(Boolean start) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.BufferingBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Buffering(Boolean start) 的 stub</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromBurnError(WMPLib.IWMPCdromBurn,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnError(IWMPCdromBurn pCdromBurn, Int32 hrError) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromBurnErrorIWMPCdromBurnInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnError(IWMPCdromBurn pCdromBurn, Int32 hrError) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromBurnMediaError(WMPLib.IWMPCdromBurn,System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnMediaError(IWMPCdromBurn pCdromBurn, Object pMedia) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromBurnMediaErrorIWMPCdromBurnObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnMediaError(IWMPCdromBurn pCdromBurn, Object pMedia) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromBurnStateChange(WMPLib.IWMPCdromBurn,WMPLib.WMPBurnState)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnStateChange(IWMPCdromBurn pCdromBurn, WMPBurnState wmpbs) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromBurnStateChangeIWMPCdromBurnWMPBurnState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromBurnStateChange(IWMPCdromBurn pCdromBurn, WMPBurnState wmpbs) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromMediaChange(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromMediaChange(Int32 cdromNum) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromMediaChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromMediaChange(Int32 cdromNum) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromRipMediaError(WMPLib.IWMPCdromRip,System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipMediaError(IWMPCdromRip pCdromRip, Object pMedia) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromRipMediaErrorIWMPCdromRipObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipMediaError(IWMPCdromRip pCdromRip, Object pMedia) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromRipStateChange(WMPLib.IWMPCdromRip,WMPLib.WMPRipState)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipStateChange(IWMPCdromRip pCdromRip, WMPRipState wmprs) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CdromRipStateChangeIWMPCdromRipWMPRipState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CdromRipStateChange(IWMPCdromRip pCdromRip, WMPRipState wmprs) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.Click(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Click(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.ClickInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Click(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CreatePartnershipComplete(WMPLib.IWMPSyncDevice,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CreatePartnershipComplete(IWMPSyncDevice pDevice, Int32 hrResult) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CreatePartnershipCompleteIWMPSyncDeviceInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CreatePartnershipComplete(IWMPSyncDevice pDevice, Int32 hrResult) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentItemChange(System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentItemChange(Object pdispMedia) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentItemChangeObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentItemChange(Object pdispMedia) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailable(System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailable(String bstrItemName) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailableString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentMediaItemAvailable(String bstrItemName) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChange(WMPLib.WMPPlaylistChangeEventType)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChange(WMPPlaylistChangeEventType change) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChangeWMPPlaylistChangeEventType">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistChange(WMPPlaylistChangeEventType change) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailable(System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailable(String bstrItemName) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailableString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.CurrentPlaylistItemAvailable(String bstrItemName) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceConnect(WMPLib.IWMPSyncDevice)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceConnect(IWMPSyncDevice pDevice) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceConnectIWMPSyncDevice">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceConnect(IWMPSyncDevice pDevice) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceDisconnect(WMPLib.IWMPSyncDevice)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceDisconnect(IWMPSyncDevice pDevice) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceDisconnectIWMPSyncDevice">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceDisconnect(IWMPSyncDevice pDevice) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceStatusChange(WMPLib.IWMPSyncDevice,WMPLib.WMPDeviceStatus)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceStatusChange(IWMPSyncDevice pDevice, WMPDeviceStatus newStatus) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceStatusChangeIWMPSyncDeviceWMPDeviceStatus">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceStatusChange(IWMPSyncDevice pDevice, WMPDeviceStatus newStatus) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceSyncError(WMPLib.IWMPSyncDevice,System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncError(IWMPSyncDevice pDevice, Object pMedia) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceSyncErrorIWMPSyncDeviceObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncError(IWMPSyncDevice pDevice, Object pMedia) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChange(WMPLib.IWMPSyncDevice,WMPLib.WMPSyncState)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChange(IWMPSyncDevice pDevice, WMPSyncState newState) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChangeIWMPSyncDeviceWMPSyncState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DeviceSyncStateChange(IWMPSyncDevice pDevice, WMPSyncState newState) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.Disconnect(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Disconnect(Int32 result) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DisconnectInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Disconnect(Int32 result) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DomainChange(System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DomainChange(String strDomain) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DomainChangeString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DomainChange(String strDomain) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DoubleClick(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DoubleClick(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DoubleClickInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DoubleClick(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DurationUnitChange(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DurationUnitChange(Int32 newDurationUnit) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.DurationUnitChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.DurationUnitChange(Int32 newDurationUnit) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.EndOfStream(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.EndOfStream(Int32 result) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.EndOfStreamInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.EndOfStream(Int32 result) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.Error">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Error() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.Error01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Error() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.FolderScanStateChange(WMPLib.WMPFolderScanState)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.FolderScanStateChange(WMPFolderScanState wmpfss) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.FolderScanStateChangeWMPFolderScanState">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.FolderScanStateChange(WMPFolderScanState wmpfss) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.InitializeStub">
            <summary>初始化 type StubAxWindowsMediaPlayerEventMulticaster 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.KeyDown(System.Int16,System.Int16)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyDown(Int16 nKeyCode, Int16 nShiftState) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.KeyDownInt16Int16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyDown(Int16 nKeyCode, Int16 nShiftState) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.KeyPress(System.Int16)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyPress(Int16 nKeyAscii) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.KeyPressInt16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyPress(Int16 nKeyAscii) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.KeyUp(System.Int16,System.Int16)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyUp(Int16 nKeyCode, Int16 nShiftState) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.KeyUpInt16Int16">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.KeyUp(Int16 nKeyCode, Int16 nShiftState) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.LibraryConnect(WMPLib.IWMPLibrary)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryConnect(IWMPLibrary pLibrary) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.LibraryConnectIWMPLibrary">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryConnect(IWMPLibrary pLibrary) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.LibraryDisconnect(WMPLib.IWMPLibrary)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryDisconnect(IWMPLibrary pLibrary) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.LibraryDisconnectIWMPLibrary">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.LibraryDisconnect(IWMPLibrary pLibrary) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MarkerHit(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MarkerHit(Int32 markerNum) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MarkerHitInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MarkerHit(Int32 markerNum) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaChange(System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaChange(Object item) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaChangeObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaChange(Object item) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAdded(System.String,System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAdded(String bstrAttribName, String bstrAttribVal) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAddedStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringAdded(String bstrAttribName, String bstrAttribVal) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChanged(System.String,System.String,System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChanged(String bstrAttribName, String bstrOldAttribVal, String bstrNewAttribVal) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChangedStringStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringChanged(String bstrAttribName, String bstrOldAttribVal, String bstrNewAttribVal) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemoved(System.String,System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemoved(String bstrAttribName, String bstrAttribVal) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemovedStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionAttributeStringRemoved(String bstrAttribName, String bstrAttribVal) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionChange() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionChange01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionChange() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAdded(System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAdded(Object pdispMedia) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAddedObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaAdded(Object pdispMedia) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemoved(System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemoved(Object pdispMedia) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemovedObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaCollectionMediaRemoved(Object pdispMedia) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaError(System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaError(Object pMediaObject) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MediaErrorObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MediaError(Object pMediaObject) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.ModeChange(System.String,System.Boolean)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ModeChange(String modeName, Boolean newValue) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.ModeChangeStringBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ModeChange(String modeName, Boolean newValue) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseDown(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MouseDownInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseDown(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseMove(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MouseMoveInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseMove(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseUp(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.MouseUpInt16Int16Int32Int32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.MouseUp(Int16 nButton, Int16 nShiftState, Int32 fX, Int32 fY) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.NewStream">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.NewStream() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.NewStream01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.NewStream() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitch(System.Object)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitch(Object pItem) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitchObject">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenPlaylistSwitch(Object pItem) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.OpenStateChange(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenStateChange(Int32 newState) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.OpenStateChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.OpenStateChange(Int32 newState) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlayStateChange(System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayStateChange(Int32 newState) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlayStateChangeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayStateChange(Int32 newState) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerDockedStateChange() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlayerReconnect">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerReconnect() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlayerReconnect01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlayerReconnect() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistChange(System.Object,WMPLib.WMPPlaylistChangeEventType)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistChange(Object playlist, WMPPlaylistChangeEventType change) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistChangeObjectWMPPlaylistChangeEventType">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistChange(Object playlist, WMPPlaylistChangeEventType change) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionChange() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAdded(System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAdded(String bstrPlaylistName) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAddedString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistAdded(String bstrPlaylistName) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemoved(System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemoved(String bstrPlaylistName) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemovedString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistRemoved(String bstrPlaylistName) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeleted(System.String,System.Boolean)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeleted(String bstrPlaylistName, Boolean varfIsDeleted) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeletedStringBoolean">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PlaylistCollectionPlaylistSetAsDeleted(String bstrPlaylistName, Boolean varfIsDeleted) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PositionChange(System.Double,System.Double)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PositionChange(Double oldPosition, Double newPosition) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.PositionChangeDoubleDouble">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.PositionChange(Double oldPosition, Double newPosition) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.ScriptCommand(System.String,System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ScriptCommand(String scType, String param) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.ScriptCommandStringString">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.ScriptCommand(String scType, String param) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.StatusChange">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StatusChange() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.StatusChange01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StatusChange() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.StringCollectionChange(System.Object,WMPLib.WMPStringCollectionChangeEventType,System.Int32)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StringCollectionChange(Object pdispStringCollection, WMPStringCollectionChangeEventType change, Int32 lCollectionIndex) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.StringCollectionChangeObjectWMPStringCollectionChangeEventTypeInt32">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.StringCollectionChange(Object pdispStringCollection, WMPStringCollectionChangeEventType change, Int32 lCollectionIndex) 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.SwitchedToControl">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToControl() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.SwitchedToControl01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToControl() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication() 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication01">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.SwitchedToPlayerApplication() 的 stub</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.Warning(System.Int32,System.Int32,System.String)">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Warning(Int32 warningType, Int32 param, String description) 的 存根</summary>
        </member>
        <member name="F:AxWMPLib.Fakes.StubAxWindowsMediaPlayerEventMulticaster.WarningInt32Int32String">
            <summary>设置 AxWindowsMediaPlayerEventMulticaster.Warning(Int32 warningType, Int32 param, String description) 的 stub</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_AudioLanguageChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_AudioLanguageChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_AudioLanguageChangeEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_AudioLanguageChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_AudioLanguageChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_AudioLanguageChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_AudioLanguageChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_AudioLanguageChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_BufferingEvent">
            <summary>AxWMPLib._WMPOCXEvents_BufferingEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_BufferingEvent.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_BufferingEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_BufferingEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_BufferingEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_BufferingEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_BufferingEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromBurnErrorEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnErrorEvent.#ctor(WMPLib.IWMPCdromBurn,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnErrorEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnErrorEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CdromBurnErrorEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnErrorEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnErrorEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnMediaErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromBurnMediaErrorEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnMediaErrorEvent.#ctor(WMPLib.IWMPCdromBurn,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnMediaErrorEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnMediaErrorEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CdromBurnMediaErrorEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnMediaErrorEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnMediaErrorEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromBurnStateChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnStateChangeEvent.#ctor(WMPLib.IWMPCdromBurn,WMPLib.WMPBurnState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnStateChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnStateChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CdromBurnStateChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnStateChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromBurnStateChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromMediaChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromMediaChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromMediaChangeEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromMediaChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromMediaChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CdromMediaChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromMediaChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromMediaChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipMediaErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromRipMediaErrorEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipMediaErrorEvent.#ctor(WMPLib.IWMPCdromRip,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipMediaErrorEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipMediaErrorEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CdromRipMediaErrorEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipMediaErrorEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipMediaErrorEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CdromRipStateChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipStateChangeEvent.#ctor(WMPLib.IWMPCdromRip,WMPLib.WMPRipState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipStateChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipStateChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CdromRipStateChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipStateChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CdromRipStateChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_ClickEvent">
            <summary>AxWMPLib._WMPOCXEvents_ClickEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_ClickEvent.#ctor(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ClickEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_ClickEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_ClickEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ClickEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ClickEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CreatePartnershipCompleteEvent">
            <summary>AxWMPLib._WMPOCXEvents_CreatePartnershipCompleteEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CreatePartnershipCompleteEvent.#ctor(WMPLib.IWMPSyncDevice,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CreatePartnershipCompleteEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CreatePartnershipCompleteEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CreatePartnershipCompleteEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CreatePartnershipCompleteEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CreatePartnershipCompleteEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentItemChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentItemChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentItemChangeEvent.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentItemChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentItemChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CurrentItemChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentItemChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentItemChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentMediaItemAvailableEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentMediaItemAvailableEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentPlaylistChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistChangeEvent.#ctor(WMPLib.WMPPlaylistChangeEventType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CurrentPlaylistChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent">
            <summary>AxWMPLib._WMPOCXEvents_CurrentPlaylistItemAvailableEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_CurrentPlaylistItemAvailableEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceConnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceConnectEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceConnectEvent.#ctor(WMPLib.IWMPSyncDevice)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceConnectEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceConnectEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DeviceConnectEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceConnectEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceConnectEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceDisconnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceDisconnectEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceDisconnectEvent.#ctor(WMPLib.IWMPSyncDevice)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceDisconnectEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceDisconnectEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DeviceDisconnectEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceDisconnectEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceDisconnectEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceStatusChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceStatusChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceStatusChangeEvent.#ctor(WMPLib.IWMPSyncDevice,WMPLib.WMPDeviceStatus)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceStatusChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceStatusChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DeviceStatusChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceStatusChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceStatusChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceSyncErrorEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncErrorEvent.#ctor(WMPLib.IWMPSyncDevice,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncErrorEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncErrorEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DeviceSyncErrorEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncErrorEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncErrorEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DeviceSyncStateChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncStateChangeEvent.#ctor(WMPLib.IWMPSyncDevice,WMPLib.WMPSyncState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncStateChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncStateChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DeviceSyncStateChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncStateChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DeviceSyncStateChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DisconnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_DisconnectEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DisconnectEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DisconnectEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DisconnectEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DisconnectEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DisconnectEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DisconnectEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DomainChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DomainChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DomainChangeEvent.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DomainChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DomainChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DomainChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DomainChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DomainChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DoubleClickEvent">
            <summary>AxWMPLib._WMPOCXEvents_DoubleClickEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DoubleClickEvent.#ctor(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DoubleClickEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DoubleClickEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DoubleClickEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DoubleClickEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DoubleClickEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_DurationUnitChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_DurationUnitChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DurationUnitChangeEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DurationUnitChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_DurationUnitChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_DurationUnitChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DurationUnitChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_DurationUnitChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_EndOfStreamEvent">
            <summary>AxWMPLib._WMPOCXEvents_EndOfStreamEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_EndOfStreamEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_EndOfStreamEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_EndOfStreamEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_EndOfStreamEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_EndOfStreamEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_EndOfStreamEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_FolderScanStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_FolderScanStateChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_FolderScanStateChangeEvent.#ctor(WMPLib.WMPFolderScanState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_FolderScanStateChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_FolderScanStateChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_FolderScanStateChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_FolderScanStateChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_FolderScanStateChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyDownEvent">
            <summary>AxWMPLib._WMPOCXEvents_KeyDownEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyDownEvent.#ctor(System.Int16,System.Int16)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyDownEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyDownEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_KeyDownEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyDownEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyDownEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyPressEvent">
            <summary>AxWMPLib._WMPOCXEvents_KeyPressEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyPressEvent.#ctor(System.Int16)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyPressEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyPressEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_KeyPressEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyPressEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyPressEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyUpEvent">
            <summary>AxWMPLib._WMPOCXEvents_KeyUpEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyUpEvent.#ctor(System.Int16,System.Int16)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyUpEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyUpEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_KeyUpEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyUpEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_KeyUpEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryConnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_LibraryConnectEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryConnectEvent.#ctor(WMPLib.IWMPLibrary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryConnectEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryConnectEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_LibraryConnectEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryConnectEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryConnectEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryDisconnectEvent">
            <summary>AxWMPLib._WMPOCXEvents_LibraryDisconnectEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryDisconnectEvent.#ctor(WMPLib.IWMPLibrary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryDisconnectEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryDisconnectEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_LibraryDisconnectEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryDisconnectEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_LibraryDisconnectEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MarkerHitEvent">
            <summary>AxWMPLib._WMPOCXEvents_MarkerHitEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MarkerHitEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MarkerHitEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MarkerHitEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MarkerHitEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MarkerHitEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MarkerHitEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaChangeEvent.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringAddedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringAddedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringChangedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringChangedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionAttributeStringRemovedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionMediaAddedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaAddedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaCollectionMediaRemovedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaCollectionMediaRemovedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaErrorEvent">
            <summary>AxWMPLib._WMPOCXEvents_MediaErrorEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaErrorEvent.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaErrorEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaErrorEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MediaErrorEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaErrorEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MediaErrorEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_ModeChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_ModeChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_ModeChangeEvent.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ModeChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_ModeChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_ModeChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ModeChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ModeChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseDownEvent">
            <summary>AxWMPLib._WMPOCXEvents_MouseDownEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseDownEvent.#ctor(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseDownEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseDownEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MouseDownEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseDownEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseDownEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseMoveEvent">
            <summary>AxWMPLib._WMPOCXEvents_MouseMoveEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseMoveEvent.#ctor(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseMoveEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseMoveEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MouseMoveEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseMoveEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseMoveEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseUpEvent">
            <summary>AxWMPLib._WMPOCXEvents_MouseUpEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseUpEvent.#ctor(System.Int16,System.Int16,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseUpEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseUpEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_MouseUpEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseUpEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_MouseUpEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenPlaylistSwitchEvent">
            <summary>AxWMPLib._WMPOCXEvents_OpenPlaylistSwitchEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenPlaylistSwitchEvent.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenPlaylistSwitchEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenPlaylistSwitchEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_OpenPlaylistSwitchEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenPlaylistSwitchEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenPlaylistSwitchEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_OpenStateChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenStateChangeEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenStateChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenStateChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_OpenStateChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenStateChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_OpenStateChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlayStateChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlayStateChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlayStateChangeEvent.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlayStateChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlayStateChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_PlayStateChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlayStateChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlayStateChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistChangeEvent.#ctor(System.Object,WMPLib.WMPPlaylistChangeEventType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_PlaylistChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistAddedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistRemovedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent">
            <summary>AxWMPLib._WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PlaylistCollectionPlaylistSetAsDeletedEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_PositionChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_PositionChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PositionChangeEvent.#ctor(System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PositionChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_PositionChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_PositionChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PositionChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_PositionChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_ScriptCommandEvent">
            <summary>AxWMPLib._WMPOCXEvents_ScriptCommandEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_ScriptCommandEvent.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ScriptCommandEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_ScriptCommandEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_ScriptCommandEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ScriptCommandEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_ScriptCommandEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_StringCollectionChangeEvent">
            <summary>AxWMPLib._WMPOCXEvents_StringCollectionChangeEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_StringCollectionChangeEvent.#ctor(System.Object,WMPLib.WMPStringCollectionChangeEventType,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_StringCollectionChangeEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_StringCollectionChangeEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_StringCollectionChangeEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_StringCollectionChangeEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_StringCollectionChangeEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AxWMPLib.Fakes.Stub_WMPOCXEvents_WarningEvent">
            <summary>AxWMPLib._WMPOCXEvents_WarningEvent 的存根类型</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_WarningEvent.#ctor(System.Int32,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_WarningEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AxWMPLib.Fakes.Stub_WMPOCXEvents_WarningEvent.InitializeStub">
            <summary>初始化 type Stub_WMPOCXEvents_WarningEvent 的新实例</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_WarningEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AxWMPLib.Fakes.Stub_WMPOCXEvents_WarningEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.AxInteropWMPLibDelegates">
            <summary>包含用于 AxInterop.WMPLib 的存根和填充码的自定义委托</summary>
        </member>
    </members>
</doc>
